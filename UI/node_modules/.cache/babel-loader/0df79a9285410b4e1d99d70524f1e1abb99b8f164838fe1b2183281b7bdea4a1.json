{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/frontend/biomultitool/src/components/Files/FS.js\",\n  _s = $RefreshSig$();\nimport './Files.css';\nimport { File, Dir, Preview } from './File/File';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useResolvedPath } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = () => {\n  _s();\n  const path = useResolvedPath().pathname;\n  const [files, setFiles] = useState(null);\n  const [file, previewFile] = useState();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const getFiles = () => {\n    axios.get(`http://192.168.1.37:8080${path}`).then(res => {\n      setFiles(res.data.map(file => {\n        return file.isDir ? /*#__PURE__*/_jsxDEV(Dir, {\n          data: file\n        }, file.filename, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(File, {\n          data: file,\n          onClick: () => previewFile(file)\n        }, file.filename, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 61\n        }, this);\n      }));\n    });\n  };\n  useEffect(() => {\n    getFiles();\n  });\n  const uploadFiles = _ref => {\n    let {\n      files\n    } = _ref;\n    let form = new FormData();\n    Object.keys(files).map(file => form.append(\"file\", files[file]));\n    axios.post(`http://192.168.1.37:8080${path}`, form, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      }\n    }).then(() => getFiles()).catch();\n  };\n  const New = _ref2 => {\n    let {\n      onClick\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"New\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(data => uploadFiles(data)),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(`files`),\n          type: \"file\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Filename\",\n        children: \"Add new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divider\",\n    style: {\n      gridTemplateColumns: `60% 40%`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FSnav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PathSelector\",\n          children: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Files\",\n        children: [/*#__PURE__*/_jsxDEV(New, {\n          onClick: () => {\n            console.log(`Add New`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }, this), files]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      filePreview: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(Files, \"e3uXtf0mpdXi5VxIREhrZXNeR2M=\", false, function () {\n  return [useResolvedPath, useForm];\n});\n_c = Files;\nexport default Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["File","Dir","Preview","useEffect","useState","axios","useResolvedPath","useForm","jsxDEV","_jsxDEV","Files","_s","path","pathname","files","setFiles","file","previewFile","register","handleSubmit","getFiles","get","then","res","data","map","isDir","filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","uploadFiles","_ref","form","FormData","Object","keys","append","post","headers","catch","New","_ref2","className","children","onSubmit","type","multiple","style","gridTemplateColumns","console","log","filePreview","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/frontend/biomultitool/src/components/Files/FS.js"],"sourcesContent":["import './Files.css'\nimport { File, Dir, Preview } from './File/File'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useResolvedPath } from 'react-router-dom'\nimport { useForm } from \"react-hook-form\";\n\nconst Files = () => {\n\nconst path = useResolvedPath().pathname\nconst [files, setFiles] = useState (null)\nconst [file, previewFile] = useState()\nconst { register, handleSubmit } = useForm()\n\nconst getFiles = () => {\n\taxios.get(`http://192.168.1.37:8080${path}`).then(res => {\n\t\tsetFiles(res.data.map(file => {\n\t\t\treturn file.isDir?<Dir key={file.filename} data={file}/>:<File key={file.filename} data={file} onClick={() => previewFile(file)}/> \n\t\t}))\n\t})\n}\n\nuseEffect(() => { getFiles() })\n\nconst uploadFiles = ({ files }) => {\n\n\tlet form = new FormData()\n\tObject.keys(files).map(file => form.append(\"file\", files[file]))\n\taxios.post(`http://192.168.1.37:8080${path}`,\n\t\tform, \n\t\t{ headers:\n\t\t\t{ \"Content-type\":\"multipart/form-data\" } \n\t\t})\n\t\t.then(() => getFiles())\n\t\t.catch()\n}\n\nconst New = ({ onClick }) => {\n\treturn (\n\t\t<div className='New' onClick={onClick}>\n\t\t\t<form onSubmit={ handleSubmit(data => uploadFiles(data)) }>\n\t\t\t\t<input { ...register(`files`) } type=\"file\" multiple />\n\t\t\t\t<input type=\"submit\"/>\n\t\t\t</form>\n\t\t\t<p className='Filename'>Add new</p>\n\t\t</div>\n\t)\n}\n\n\treturn (\n\t\t<div className='Divider' style={{gridTemplateColumns:`60% 40%`}}>\n\t\t<div className='Wrapper'>\n\t\t\t<div className='FSnav'>\n\t\t\t\t<div className='PathSelector'>{path}</div>\n\t\t\t</div>\n\t\t\t<div className='Files'><New onClick={() => { console.log(`Add New`) }} />{files}</div>\n\t\t</div>\n\t\t\t<Preview filePreview={ file } />\n\t\t</div>\n\t\t)\n\t}\n\nexport default Files\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}