{"ast":null,"code":"import _regeneratorRuntime from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"name\"],\n  _excluded3 = [\"_f\"],\n  _excluded4 = [\"_f\"];\nimport React from 'react';\nvar isCheckBoxInput = function isCheckBoxInput(element) {\n  return element.type === 'checkbox';\n};\nvar isDateObject = function isDateObject(value) {\n  return value instanceof Date;\n};\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value == null;\n};\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\n};\nvar getEventValue = function getEventValue(event) {\n  return isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\n};\nvar getNodeParentName = function getNodeParentName(name) {\n  return name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n};\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return names.has(getNodeParentName(name));\n};\nvar isPlainObject = function isPlainObject(tempObject) {\n  var prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf');\n};\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\nfunction cloneObject(data) {\n  var copy;\n  var isArray = Array.isArray(data);\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray || isObject(data))) {\n    copy = isArray ? [] : {};\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (var key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n  return copy;\n}\nvar compact = function compact(value) {\n  return Array.isArray(value) ? value.filter(Boolean) : [];\n};\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\nvar _get = function get(obj, path, defaultValue) {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n  var result = compact(path.split(/[,[\\].]+?/)).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nvar EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change'\n};\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nvar HookFormContext = React.createContext(null);\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\nvar useFormContext = function useFormContext() {\n  return React.useContext(HookFormContext);\n};\n/**\r\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @param props - all useFrom methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\nvar FormProvider = function FormProvider(props) {\n  var children = props.children,\n    data = _objectWithoutProperties(props, _excluded);\n  return React.createElement(HookFormContext.Provider, {\n    value: data\n  }, children);\n};\nvar getProxyFormState = function getProxyFormState(formState, control, localProxyFormState) {\n  var isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var result = {\n    defaultValues: control._defaultValues\n  };\n  var _loop = function _loop(key) {\n    Object.defineProperty(result, key, {\n      get: function get() {\n        var _key = key;\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      }\n    });\n  };\n  for (var key in formState) {\n    _loop(key);\n  }\n  return result;\n};\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\nvar shouldRenderFormState = function shouldRenderFormState(formStateData, _proxyFormState, updateFormState, isRoot) {\n  updateFormState(formStateData);\n  var name = formStateData.name,\n    formState = _objectWithoutProperties(formStateData, _excluded2);\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(function (key) {\n    return _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all);\n  });\n};\nvar convertToArrayPayload = function convertToArrayPayload(value) {\n  return Array.isArray(value) ? value : [value];\n};\nvar shouldSubscribeByName = function shouldSubscribeByName(name, signalName, exact) {\n  return exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some(function (currentName) {\n    return currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName));\n  });\n};\nfunction useSubscribe(props) {\n  var _props = React.useRef(props);\n  _props.current = props;\n  React.useEffect(function () {\n    var subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({\n      next: _props.current.next\n    });\n    return function () {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useFormState(props) {\n  var methods = useFormContext();\n  var _ref = props || {},\n    _ref$control = _ref.control,\n    control = _ref$control === void 0 ? methods.control : _ref$control,\n    disabled = _ref.disabled,\n    name = _ref.name,\n    exact = _ref.exact;\n  var _React$useState = React.useState(control._formState),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formState = _React$useState2[0],\n    updateFormState = _React$useState2[1];\n  var _mounted = React.useRef(true);\n  var _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n  var _name = React.useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled: disabled,\n    next: function next(value) {\n      return _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState(_objectSpread(_objectSpread({}, control._formState), value));\n    },\n    subject: control._subjects.state\n  });\n  React.useEffect(function () {\n    _mounted.current = true;\n    var isDirty = control._proxyFormState.isDirty && control._getDirty();\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty: isDirty\n      });\n    }\n    _localProxyFormState.current.isValid && control._updateValid(true);\n    return function () {\n      _mounted.current = false;\n    };\n  }, [control]);\n  return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\nvar generateWatchOutput = function generateWatchOutput(names, _names, formValues, isGlobal, defaultValue) {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return _get(formValues, names, defaultValue);\n  }\n  if (Array.isArray(names)) {\n    return names.map(function (fieldName) {\n      return isGlobal && _names.watch.add(fieldName), _get(formValues, fieldName);\n    });\n  }\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\nfunction useWatch(props) {\n  var methods = useFormContext();\n  var _ref2 = props || {},\n    _ref2$control = _ref2.control,\n    control = _ref2$control === void 0 ? methods.control : _ref2$control,\n    name = _ref2.name,\n    defaultValue = _ref2.defaultValue,\n    disabled = _ref2.disabled,\n    exact = _ref2.exact;\n  var _name = React.useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled: disabled,\n    subject: control._subjects.values,\n    next: function next(formState) {\n      if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n      }\n    }\n  });\n  var _React$useState3 = React.useState(control._getWatch(name, defaultValue)),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    value = _React$useState4[0],\n    updateValue = _React$useState4[1];\n  React.useEffect(function () {\n    return control._removeUnmounted();\n  });\n  return value;\n}\nvar isKey = function isKey(value) {\n  return /^\\w*$/.test(value);\n};\nvar stringToPath = function stringToPath(input) {\n  return compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n};\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n\n/**\r\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns field properties, field and form state. {@link UseControllerReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function Input(props) {\r\n *   const { field, fieldState, formState } = useController(props);\r\n *   return (\r\n *     <div>\r\n *       <input {...field} placeholder={props.name} />\r\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\r\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useController(props) {\n  var methods = useFormContext();\n  var name = props.name,\n    _props$control = props.control,\n    control = _props$control === void 0 ? methods.control : _props$control,\n    shouldUnregister = props.shouldUnregister;\n  var isArrayField = isNameInFieldArray(control._names.array, name);\n  var value = useWatch({\n    control: control,\n    name: name,\n    defaultValue: _get(control._formValues, name, _get(control._defaultValues, name, props.defaultValue)),\n    exact: true\n  });\n  var formState = useFormState({\n    control: control,\n    name: name\n  });\n  var _registerProps = React.useRef(control.register(name, _objectSpread(_objectSpread({}, props.rules), {}, {\n    value: value\n  })));\n  React.useEffect(function () {\n    var _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n    var updateMounted = function updateMounted(name, value) {\n      var field = _get(control._fields, name);\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n    updateMounted(name, true);\n    if (_shouldUnregisterField) {\n      set(control._defaultValues, name, cloneObject(_get(control._options.defaultValues, name)));\n    }\n    return function () {\n      (isArrayField ? _shouldUnregisterField && !control._state.action : _shouldUnregisterField) ? control.unregister(name) : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n  return {\n    field: {\n      name: name,\n      value: value,\n      onChange: React.useCallback(function (event) {\n        return _registerProps.current.onChange({\n          target: {\n            value: getEventValue(event),\n            name: name\n          },\n          type: EVENTS.CHANGE\n        });\n      }, [name]),\n      onBlur: React.useCallback(function () {\n        return _registerProps.current.onBlur({\n          target: {\n            value: _get(control._formValues, name),\n            name: name\n          },\n          type: EVENTS.BLUR\n        });\n      }, [name, control]),\n      ref: function ref(elm) {\n        var field = _get(control._fields, name);\n        if (field && elm) {\n          field._f.ref = {\n            focus: function focus() {\n              return elm.focus();\n            },\n            select: function select() {\n              return elm.select();\n            },\n            setCustomValidity: function setCustomValidity(message) {\n              return elm.setCustomValidity(message);\n            },\n            reportValidity: function reportValidity() {\n              return elm.reportValidity();\n            }\n          };\n        }\n      }\n    },\n    formState: formState,\n    fieldState: Object.defineProperties({}, {\n      invalid: {\n        enumerable: true,\n        get: function get() {\n          return !!_get(formState.errors, name);\n        }\n      },\n      isDirty: {\n        enumerable: true,\n        get: function get() {\n          return !!_get(formState.dirtyFields, name);\n        }\n      },\n      isTouched: {\n        enumerable: true,\n        get: function get() {\n          return !!_get(formState.touchedFields, name);\n        }\n      },\n      error: {\n        enumerable: true,\n        get: function get() {\n          return _get(formState.errors, name);\n        }\n      }\n    })\n  };\n}\n\n/**\r\n * Component based on `useController` hook to work with controlled component.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns provide field handler functions, field and form state.\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { control } = useForm<FormValues>({\r\n *     defaultValues: {\r\n *       test: \"\"\r\n *     }\r\n *   });\r\n *\r\n *   return (\r\n *     <form>\r\n *       <Controller\r\n *         control={control}\r\n *         name=\"test\"\r\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\r\n *           <>\r\n *             <input\r\n *               onChange={onChange} // send value to hook form\r\n *               onBlur={onBlur} // notify when input is touched\r\n *               value={value} // return updated value\r\n *               ref={ref} // set ref for focus management\r\n *             />\r\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\r\n *           </>\r\n *         )}\r\n *       />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nvar Controller = function Controller(props) {\n  return props.render(useController(props));\n};\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  return validateAllFieldCriteria ? _objectSpread(_objectSpread({}, errors[name]), {}, {\n    types: _objectSpread(_objectSpread({}, errors[name] && errors[name].types ? errors[name].types : {}), {}, _defineProperty({}, type, message || true))\n  }) : {};\n};\nvar focusFieldBy = function focusFieldBy(fields, callback, fieldsNames) {\n  var _iterator = _createForOfIteratorHelper(fieldsNames || Object.keys(fields)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var field = _get(fields, key);\n      if (field) {\n        var _f = field._f,\n          currentField = _objectWithoutProperties(field, _excluded3);\n        if (_f && callback(_f.name)) {\n          if (_f.ref.focus) {\n            _f.ref.focus();\n            break;\n          } else if (_f.refs && _f.refs[0].focus) {\n            _f.refs[0].focus();\n            break;\n          }\n        } else if (isObject(currentField)) {\n          focusFieldBy(currentField, callback);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\nvar generateId = function generateId() {\n  var d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\nvar getFocusFieldName = function getFocusFieldName(name, index) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return options.shouldFocus || isUndefined(options.shouldFocus) ? options.focusName || \"\".concat(name, \".\").concat(isUndefined(options.focusIndex) ? index : options.focusIndex, \".\") : '';\n};\nvar getValidationModes = function getValidationModes(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched\n  };\n};\nvar isWatched = function isWatched(name, _names, isBlurEvent) {\n  return !isBlurEvent && (_names.watchAll || _names.watch.has(name) || _toConsumableArray(_names.watch).some(function (watchName) {\n    return name.startsWith(watchName) && /^\\.\\w+/.test(name.slice(watchName.length));\n  }));\n};\nvar updateFieldArrayRootError = function updateFieldArrayRootError(errors, error, name) {\n  var fieldArrayErrors = compact(_get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\nvar isFileInput = function isFileInput(element) {\n  return element.type === 'file';\n};\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\nvar isHTMLElement = function isHTMLElement(value) {\n  if (!isWeb) {\n    return false;\n  }\n  var owner = value ? value.ownerDocument : 0;\n  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);\n};\nvar isMessage = function isMessage(value) {\n  return isString(value);\n};\nvar isRadioInput = function isRadioInput(element) {\n  return element.type === 'radio';\n};\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (option) {\n        return option && option.checked && !option.disabled;\n      }).map(function (option) {\n        return option.value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    return options[0].checked && !options[0].disabled ?\n    // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nvar defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = function getRadioValue(options) {\n  return Array.isArray(options) ? options.reduce(function (previous, option) {\n    return option && option.checked && !option.disabled ? {\n      isValid: true,\n      value: option.value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type: type,\n      message: isMessage(result) ? result : '',\n      ref: ref\n    };\n  }\n}\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  return isObject(validationData) && !isRegex(validationData) ? validationData : {\n    value: validationData,\n    message: ''\n  };\n};\nvar validateField = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) {\n    var _field$_f, ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, inputValue, inputRef, setCustomValidity, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, _ref4, value, message, exceedMax, exceedMin, maxOutput, minOutput, valueNumber, valueDate, convertTimeToDate, isTime, isWeek, maxLengthOutput, minLengthOutput, _exceedMax, _exceedMin, _getValueAndMessage, patternValue, _message, result, validateError, validationResult, key, _validateError;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _field$_f = field._f, ref = _field$_f.ref, refs = _field$_f.refs, required = _field$_f.required, maxLength = _field$_f.maxLength, minLength = _field$_f.minLength, min = _field$_f.min, max = _field$_f.max, pattern = _field$_f.pattern, validate = _field$_f.validate, name = _field$_f.name, valueAsNumber = _field$_f.valueAsNumber, mount = _field$_f.mount, disabled = _field$_f.disabled;\n          inputValue = _get(formValues, name);\n          if (!(!mount || disabled)) {\n            _context.next = 4;\n            break;\n          }\n          return _context.abrupt(\"return\", {});\n        case 4:\n          inputRef = refs ? refs[0] : ref;\n          setCustomValidity = function setCustomValidity(message) {\n            if (shouldUseNativeValidation && inputRef.reportValidity) {\n              inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n              inputRef.reportValidity();\n            }\n          };\n          error = {};\n          isRadio = isRadioInput(ref);\n          isCheckBox = isCheckBoxInput(ref);\n          isRadioOrCheckbox = isRadio || isCheckBox;\n          isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === '' || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n          appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n          getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n            var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n            var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n            var message = exceedMax ? maxLengthMessage : minLengthMessage;\n            error[name] = _objectSpread({\n              type: exceedMax ? maxType : minType,\n              message: message,\n              ref: ref\n            }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n          };\n          if (!(isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid))) {\n            _context.next = 20;\n            break;\n          }\n          _ref4 = isMessage(required) ? {\n            value: !!required,\n            message: required\n          } : getValueAndMessage(required), value = _ref4.value, message = _ref4.message;\n          if (!value) {\n            _context.next = 20;\n            break;\n          }\n          error[name] = _objectSpread({\n            type: INPUT_VALIDATION_RULES.required,\n            message: message,\n            ref: inputRef\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n          if (validateAllFieldCriteria) {\n            _context.next = 20;\n            break;\n          }\n          setCustomValidity(message);\n          return _context.abrupt(\"return\", error);\n        case 20:\n          if (!(!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max)))) {\n            _context.next = 29;\n            break;\n          }\n          maxOutput = getValueAndMessage(max);\n          minOutput = getValueAndMessage(min);\n          if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n              exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n              exceedMin = valueNumber < minOutput.value;\n            }\n          } else {\n            valueDate = ref.valueAsDate || new Date(inputValue);\n            convertTimeToDate = function convertTimeToDate(time) {\n              return new Date(new Date().toDateString() + ' ' + time);\n            };\n            isTime = ref.type == 'time';\n            isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n              exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n              exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);\n            }\n          }\n          if (!(exceedMax || exceedMin)) {\n            _context.next = 29;\n            break;\n          }\n          getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n          if (validateAllFieldCriteria) {\n            _context.next = 29;\n            break;\n          }\n          setCustomValidity(error[name].message);\n          return _context.abrupt(\"return\", error);\n        case 29:\n          if (!((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue)))) {\n            _context.next = 39;\n            break;\n          }\n          maxLengthOutput = getValueAndMessage(maxLength);\n          minLengthOutput = getValueAndMessage(minLength);\n          _exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n          _exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n          if (!(_exceedMax || _exceedMin)) {\n            _context.next = 39;\n            break;\n          }\n          getMinMaxMessage(_exceedMax, maxLengthOutput.message, minLengthOutput.message);\n          if (validateAllFieldCriteria) {\n            _context.next = 39;\n            break;\n          }\n          setCustomValidity(error[name].message);\n          return _context.abrupt(\"return\", error);\n        case 39:\n          if (!(pattern && !isEmpty && isString(inputValue))) {\n            _context.next = 46;\n            break;\n          }\n          _getValueAndMessage = getValueAndMessage(pattern), patternValue = _getValueAndMessage.value, _message = _getValueAndMessage.message;\n          if (!(isRegex(patternValue) && !inputValue.match(patternValue))) {\n            _context.next = 46;\n            break;\n          }\n          error[name] = _objectSpread({\n            type: INPUT_VALIDATION_RULES.pattern,\n            message: _message,\n            ref: ref\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, _message));\n          if (validateAllFieldCriteria) {\n            _context.next = 46;\n            break;\n          }\n          setCustomValidity(_message);\n          return _context.abrupt(\"return\", error);\n        case 46:\n          if (!validate) {\n            _context.next = 80;\n            break;\n          }\n          if (!isFunction(validate)) {\n            _context.next = 59;\n            break;\n          }\n          _context.next = 50;\n          return validate(inputValue, formValues);\n        case 50:\n          result = _context.sent;\n          validateError = getValidateError(result, inputRef);\n          if (!validateError) {\n            _context.next = 57;\n            break;\n          }\n          error[name] = _objectSpread(_objectSpread({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n          if (validateAllFieldCriteria) {\n            _context.next = 57;\n            break;\n          }\n          setCustomValidity(validateError.message);\n          return _context.abrupt(\"return\", error);\n        case 57:\n          _context.next = 80;\n          break;\n        case 59:\n          if (!isObject(validate)) {\n            _context.next = 80;\n            break;\n          }\n          validationResult = {};\n          _context.t0 = _regeneratorRuntime().keys(validate);\n        case 62:\n          if ((_context.t1 = _context.t0()).done) {\n            _context.next = 76;\n            break;\n          }\n          key = _context.t1.value;\n          if (!(!isEmptyObject(validationResult) && !validateAllFieldCriteria)) {\n            _context.next = 66;\n            break;\n          }\n          return _context.abrupt(\"break\", 76);\n        case 66:\n          _context.t2 = getValidateError;\n          _context.next = 69;\n          return validate[key](inputValue, formValues);\n        case 69:\n          _context.t3 = _context.sent;\n          _context.t4 = inputRef;\n          _context.t5 = key;\n          _validateError = (0, _context.t2)(_context.t3, _context.t4, _context.t5);\n          if (_validateError) {\n            validationResult = _objectSpread(_objectSpread({}, _validateError), appendErrorsCurry(key, _validateError.message));\n            setCustomValidity(_validateError.message);\n            if (validateAllFieldCriteria) {\n              error[name] = validationResult;\n            }\n          }\n          _context.next = 62;\n          break;\n        case 76:\n          if (isEmptyObject(validationResult)) {\n            _context.next = 80;\n            break;\n          }\n          error[name] = _objectSpread({\n            ref: inputRef\n          }, validationResult);\n          if (validateAllFieldCriteria) {\n            _context.next = 80;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 80:\n          setCustomValidity(true);\n          return _context.abrupt(\"return\", error);\n        case 82:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function validateField(_x, _x2, _x3, _x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nfunction append(data, value) {\n  return [].concat(_toConsumableArray(data), _toConsumableArray(convertToArrayPayload(value)));\n}\nvar fillEmptyArray = function fillEmptyArray(value) {\n  return Array.isArray(value) ? value.map(function () {\n    return undefined;\n  }) : undefined;\n};\nfunction insert(data, index, value) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(convertToArrayPayload(value)), _toConsumableArray(data.slice(index)));\n}\nvar moveArrayAt = function moveArrayAt(data, from, to) {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n  return data;\n};\nfunction prepend(data, value) {\n  return [].concat(_toConsumableArray(convertToArrayPayload(value)), _toConsumableArray(convertToArrayPayload(data)));\n}\nfunction removeAtIndexes(data, indexes) {\n  var i = 0;\n  var temp = _toConsumableArray(data);\n  var _iterator2 = _createForOfIteratorHelper(indexes),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var index = _step2.value;\n      temp.splice(index - i, 1);\n      i++;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = function removeArrayAt(data, index) {\n  return isUndefined(index) ? [] : removeAtIndexes(data, convertToArrayPayload(index).sort(function (a, b) {\n    return a - b;\n  }));\n};\nvar swapArrayAt = function swapArrayAt(data, indexA, indexB) {\n  data[indexA] = [data[indexB], data[indexB] = data[indexA]][0];\n};\nfunction baseGet(object, updatePath) {\n  var length = updatePath.slice(0, -1).length;\n  var index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction isEmptyArray(obj) {\n  for (var key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction unset(object, path) {\n  var paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);\n  var childObject = paths.length === 1 ? object : baseGet(object, paths);\n  var index = paths.length - 1;\n  var key = paths[index];\n  if (childObject) {\n    delete childObject[key];\n  }\n  if (index !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {\n    unset(object, paths.slice(0, -1));\n  }\n  return object;\n}\nvar updateAt = function updateAt(fieldValues, index, value) {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n\n/**\r\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\r\n *\r\n * @param props - useFieldArray props\r\n *\r\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n *     defaultValues: {\r\n *       test: []\r\n *     }\r\n *   });\r\n *   const { fields, append } = useFieldArray({\r\n *     control,\r\n *     name: \"test\"\r\n *   });\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\r\n *       {fields.map((item, index) => (\r\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\r\n *       ))}\r\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\r\n *         append\r\n *       </button>\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useFieldArray(props) {\n  var methods = useFormContext();\n  var _props$control2 = props.control,\n    control = _props$control2 === void 0 ? methods.control : _props$control2,\n    name = props.name,\n    _props$keyName = props.keyName,\n    keyName = _props$keyName === void 0 ? 'id' : _props$keyName,\n    shouldUnregister = props.shouldUnregister;\n  var _React$useState5 = React.useState(control._getFieldArray(name)),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    fields = _React$useState6[0],\n    setFields = _React$useState6[1];\n  var ids = React.useRef(control._getFieldArray(name).map(generateId));\n  var _fieldIds = React.useRef(fields);\n  var _name = React.useRef(name);\n  var _actioned = React.useRef(false);\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n  props.rules && control.register(name, props.rules);\n  useSubscribe({\n    next: function next(_ref5) {\n      var values = _ref5.values,\n        fieldArrayName = _ref5.name;\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        var fieldValues = _get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    subject: control._subjects.array\n  });\n  var updateValues = React.useCallback(function (updatedFieldArrayValues) {\n    _actioned.current = true;\n    control._updateFieldArray(name, updatedFieldArrayValues);\n  }, [control, name]);\n  var append$1 = function append$1(value, options) {\n    var appendValue = convertToArrayPayload(cloneObject(value));\n    var updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n    control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n    ids.current = append(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, append, {\n      argA: fillEmptyArray(value)\n    });\n  };\n  var prepend$1 = function prepend$1(value, options) {\n    var prependValue = convertToArrayPayload(cloneObject(value));\n    var updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prepend(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n      argA: fillEmptyArray(value)\n    });\n  };\n  var remove = function remove(index) {\n    var updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index\n    });\n  };\n  var insert$1 = function insert$1(index, value, options) {\n    var insertValue = convertToArrayPayload(cloneObject(value));\n    var updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insert(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n      argA: index,\n      argB: fillEmptyArray(value)\n    });\n  };\n  var swap = function swap(indexA, indexB) {\n    var updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n      argA: indexA,\n      argB: indexB\n    }, false);\n  };\n  var move = function move(from, to) {\n    var updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n      argA: from,\n      argB: to\n    }, false);\n  };\n  var update = function update(index, value) {\n    var updateValue = cloneObject(value);\n    var updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n    ids.current = _toConsumableArray(updatedFieldArrayValues).map(function (item, i) {\n      return !item || i === index ? generateId() : ids.current[i];\n    });\n    updateValues(updatedFieldArrayValues);\n    setFields(_toConsumableArray(updatedFieldArrayValues));\n    control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n      argA: index,\n      argB: updateValue\n    }, true, false);\n  };\n  var replace = function replace(value) {\n    var updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues(_toConsumableArray(updatedFieldArrayValues));\n    setFields(_toConsumableArray(updatedFieldArrayValues));\n    control._updateFieldArray(name, _toConsumableArray(updatedFieldArrayValues), function (data) {\n      return data;\n    }, {}, true, false);\n  };\n  React.useEffect(function () {\n    control._state.action = false;\n    isWatched(name, control._names) && control._subjects.state.next(_objectSpread({}, control._formState));\n    if (_actioned.current && (!getValidationModes(control._options.mode).isOnSubmit || control._formState.isSubmitted)) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then(function (result) {\n          var error = _get(result.errors, name);\n          var existingError = _get(control._formState.errors, name);\n          if (existingError ? !error && existingError.type : error && error.type) {\n            error ? set(control._formState.errors, name, error) : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors\n            });\n          }\n        });\n      } else {\n        var field = _get(control._fields, name);\n        if (field && field._f) {\n          validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then(function (error) {\n            return !isEmptyObject(error) && control._subjects.state.next({\n              errors: updateFieldArrayRootError(control._formState.errors, error, name)\n            });\n          });\n        }\n      }\n    }\n    control._subjects.values.next({\n      name: name,\n      values: _objectSpread({}, control._formValues)\n    });\n    control._names.focus && focusFieldBy(control._fields, function (key) {\n      return !!key && key.startsWith(control._names.focus || '');\n    });\n    control._names.focus = '';\n    control._updateValid();\n  }, [fields, name, control]);\n  React.useEffect(function () {\n    !_get(control._formValues, name) && control._updateFieldArray(name);\n    return function () {\n      (control._options.shouldUnregister || shouldUnregister) && control.unregister(name);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend$1, [updateValues, name, control]),\n    append: React.useCallback(append$1, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert$1, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(function () {\n      return fields.map(function (field, index) {\n        return _objectSpread(_objectSpread({}, field), {}, _defineProperty({}, keyName, ids.current[index] || generateId()));\n      });\n    }, [fields, keyName])\n  };\n}\nfunction createSubject() {\n  var _observers = [];\n  var next = function next(value) {\n    var _iterator3 = _createForOfIteratorHelper(_observers),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var observer = _step3.value;\n        observer.next && observer.next(value);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  };\n  var subscribe = function subscribe(observer) {\n    _observers.push(observer);\n    return {\n      unsubscribe: function unsubscribe() {\n        _observers = _observers.filter(function (o) {\n          return o !== observer;\n        });\n      }\n    };\n  };\n  var unsubscribe = function unsubscribe() {\n    _observers = [];\n  };\n  return {\n    get observers() {\n      return _observers;\n    },\n    next: next,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n}\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n  var keys1 = Object.keys(object1);\n  var keys2 = Object.keys(object2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (var _i = 0, _keys = keys1; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var val1 = object1[key];\n    if (!keys2.includes(key)) {\n      return false;\n    }\n    if (key !== 'ref') {\n      var val2 = object2[key];\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nvar isMultipleSelect = function isMultipleSelect(element) {\n  return element.type === \"select-multiple\";\n};\nvar isRadioOrCheckbox = function isRadioOrCheckbox(ref) {\n  return isRadioInput(ref) || isCheckBoxInput(ref);\n};\nvar live = function live(ref) {\n  return isHTMLElement(ref) && ref.isConnected;\n};\nvar objectHasFunction = function objectHasFunction(data) {\n  for (var key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction markFieldsDirty(data) {\n  var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (var key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n  return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n  var isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (var key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : _objectSpread({}, markFieldsDirty(data[key]));\n        } else {\n          getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n  return dirtyFieldsFromValues;\n}\nvar getDirtyFields = function getDirtyFields(defaultValues, formValues) {\n  return getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n};\nvar getFieldValueAs = function getFieldValueAs(value, _ref6) {\n  var valueAsNumber = _ref6.valueAsNumber,\n    valueAsDate = _ref6.valueAsDate,\n    setValueAs = _ref6.setValueAs;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\nfunction getFieldValue(_f) {\n  var ref = _f.ref;\n  if (_f.refs ? _f.refs.every(function (ref) {\n    return ref.disabled;\n  }) : ref.disabled) {\n    return;\n  }\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n  if (isMultipleSelect(ref)) {\n    return _toConsumableArray(ref.selectedOptions).map(function (_ref7) {\n      var value = _ref7.value;\n      return value;\n    });\n  }\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\nvar getResolverOptions = function getResolverOptions(fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) {\n  var fields = {};\n  var _iterator4 = _createForOfIteratorHelper(fieldsNames),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _name2 = _step4.value;\n      var field = _get(_fields, _name2);\n      field && set(fields, _name2, field._f);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return {\n    criteriaMode: criteriaMode,\n    names: _toConsumableArray(fieldsNames),\n    fields: fields,\n    shouldUseNativeValidation: shouldUseNativeValidation\n  };\n};\nvar getRuleValue = function getRuleValue(rule) {\n  return isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;\n};\nvar hasValidation = function hasValidation(options) {\n  return options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\n};\nfunction schemaErrorLookup(errors, _fields, name) {\n  var error = _get(errors, name);\n  if (error || isKey(name)) {\n    return {\n      error: error,\n      name: name\n    };\n  }\n  var names = name.split('.');\n  while (names.length) {\n    var fieldName = names.join('.');\n    var field = _get(_fields, fieldName);\n    var foundError = _get(errors, fieldName);\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name: name\n      };\n    }\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n    names.pop();\n  }\n  return {\n    name: name\n  };\n}\nvar skipValidation = function skipValidation(isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar unsetEmptyArray = function unsetEmptyArray(ref, name) {\n  return !compact(_get(ref, name)).length && unset(ref, name);\n};\nvar defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\nfunction createFormControl() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var flushRootRender = arguments.length > 1 ? arguments[1] : undefined;\n  var _options = _objectSpread(_objectSpread({}, defaultOptions), props);\n  var _formState = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {}\n  };\n  var _fields = {};\n  var _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};\n  var _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n  var _state = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  var _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  var delayErrorCallback;\n  var timer = 0;\n  var _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  var _subjects = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  var shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n  var validationModeBeforeSubmit = getValidationModes(_options.mode);\n  var validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  var shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n  var debounce = function debounce(callback) {\n    return function (wait) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n  };\n  var _updateValid = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(shouldUpdateValid) {\n      var isValid;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_proxyFormState.isValid || shouldUpdateValid)) {\n              _context2.next = 14;\n              break;\n            }\n            if (!_options.resolver) {\n              _context2.next = 9;\n              break;\n            }\n            _context2.t1 = isEmptyObject;\n            _context2.next = 5;\n            return _executeSchema();\n          case 5:\n            _context2.t2 = _context2.sent.errors;\n            _context2.t0 = (0, _context2.t1)(_context2.t2);\n            _context2.next = 12;\n            break;\n          case 9:\n            _context2.next = 11;\n            return executeBuiltInValidation(_fields, true);\n          case 11:\n            _context2.t0 = _context2.sent;\n          case 12:\n            isValid = _context2.t0;\n            if (isValid !== _formState.isValid) {\n              _subjects.state.next({\n                isValid: isValid\n              });\n            }\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function _updateValid(_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var _updateIsValidating = function _updateIsValidating(value) {\n    return _proxyFormState.isValidating && _subjects.state.next({\n      isValidating: value\n    });\n  };\n  var _updateFieldArray = function _updateFieldArray(name) {\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var method = arguments.length > 2 ? arguments[2] : undefined;\n    var args = arguments.length > 3 ? arguments[3] : undefined;\n    var shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var shouldUpdateFieldsAndState = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(_get(_fields, name))) {\n        var fieldValues = method(_get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n      if (shouldUpdateFieldsAndState && Array.isArray(_get(_formState.errors, name))) {\n        var errors = method(_get(_formState.errors, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(_get(_formState.touchedFields, name))) {\n        var touchedFields = method(_get(_formState.touchedFields, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n      _subjects.state.next({\n        name: name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n  var updateErrors = function updateErrors(name, error) {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n  var updateValidAndValue = function updateValidAndValue(name, shouldSkipSetValueAs, value, ref) {\n    var field = _get(_fields, name);\n    if (field) {\n      var defaultValue = _get(_formValues, name, isUndefined(value) ? _get(_defaultValues, name) : value);\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n      _state.mount && _updateValid();\n    }\n  };\n  var updateTouchAndDirty = function updateTouchAndDirty(name, fieldValue, isBlurEvent, shouldDirty, shouldRender) {\n    var shouldUpdateField = false;\n    var isPreviousDirty = false;\n    var output = {\n      name: name\n    };\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n      var isCurrentFieldPristine = deepEqual(_get(_defaultValues, name), fieldValue);\n      isPreviousDirty = _get(_formState.dirtyFields, name);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;\n    }\n    if (isBlurEvent) {\n      var isPreviousFieldTouched = _get(_formState.touchedFields, name);\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;\n      }\n    }\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n    return shouldUpdateField ? output : {};\n  };\n  var shouldRenderByError = function shouldRenderByError(name, isValid, error, fieldState) {\n    var previousFieldError = _get(_formState.errors, name);\n    var shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid) && _formState.isValid !== isValid;\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(function () {\n        return updateErrors(name, error);\n      });\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {\n      var updatedFormState = _objectSpread(_objectSpread(_objectSpread({}, fieldState), shouldUpdateValid && isBoolean(isValid) ? {\n        isValid: isValid\n      } : {}), {}, {\n        errors: _formState.errors,\n        name: name\n      });\n      _formState = _objectSpread(_objectSpread({}, _formState), updatedFormState);\n      _subjects.state.next(updatedFormState);\n    }\n    _updateIsValidating(false);\n  };\n  var _executeSchema = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(name) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation)));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function _executeSchema(_x7) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var executeSchemaAndUpdateState = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(names) {\n      var _yield$_executeSchema, errors, _iterator5, _step5, _name3, _error;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _executeSchema();\n          case 2:\n            _yield$_executeSchema = _context4.sent;\n            errors = _yield$_executeSchema.errors;\n            if (names) {\n              _iterator5 = _createForOfIteratorHelper(names);\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  _name3 = _step5.value;\n                  _error = _get(errors, _name3);\n                  _error ? set(_formState.errors, _name3, _error) : unset(_formState.errors, _name3);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            } else {\n              _formState.errors = errors;\n            }\n            return _context4.abrupt(\"return\", errors);\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function executeSchemaAndUpdateState(_x8) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var executeBuiltInValidation = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fields, shouldOnlyCheckValid) {\n      var context,\n        _name4,\n        field,\n        _f,\n        fieldValue,\n        isFieldArrayRoot,\n        fieldError,\n        _args5 = arguments;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            context = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {\n              valid: true\n            };\n            _context5.t0 = _regeneratorRuntime().keys(fields);\n          case 2:\n            if ((_context5.t1 = _context5.t0()).done) {\n              _context5.next = 23;\n              break;\n            }\n            _name4 = _context5.t1.value;\n            field = fields[_name4];\n            if (!field) {\n              _context5.next = 21;\n              break;\n            }\n            _f = field._f, fieldValue = _objectWithoutProperties(field, _excluded4);\n            if (!_f) {\n              _context5.next = 17;\n              break;\n            }\n            isFieldArrayRoot = _names.array.has(_f.name);\n            _context5.next = 11;\n            return validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\n          case 11:\n            fieldError = _context5.sent;\n            if (!fieldError[_f.name]) {\n              _context5.next = 16;\n              break;\n            }\n            context.valid = false;\n            if (!shouldOnlyCheckValid) {\n              _context5.next = 16;\n              break;\n            }\n            return _context5.abrupt(\"break\", 23);\n          case 16:\n            !shouldOnlyCheckValid && (_get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));\n          case 17:\n            _context5.t2 = fieldValue;\n            if (!_context5.t2) {\n              _context5.next = 21;\n              break;\n            }\n            _context5.next = 21;\n            return executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context);\n          case 21:\n            _context5.next = 2;\n            break;\n          case 23:\n            return _context5.abrupt(\"return\", context.valid);\n          case 24:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function executeBuiltInValidation(_x9, _x10) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var _removeUnmounted = function _removeUnmounted() {\n    var _iterator6 = _createForOfIteratorHelper(_names.unMount),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _name5 = _step6.value;\n        var field = _get(_fields, _name5);\n        field && (field._f.refs ? field._f.refs.every(function (ref) {\n          return !live(ref);\n        }) : !live(field._f.ref)) && unregister(_name5);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    _names.unMount = new Set();\n  };\n  var _getDirty = function _getDirty(name, data) {\n    return name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues);\n  };\n  var _getWatch = function _getWatch(names, defaultValue, isGlobal) {\n    return generateWatchOutput(names, _names, _objectSpread({}, _state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? _defineProperty({}, names, defaultValue) : defaultValue), isGlobal, defaultValue);\n  };\n  var _getFieldArray = function _getFieldArray(name) {\n    return compact(_get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? _get(_defaultValues, name, []) : []));\n  };\n  var setFieldValue = function setFieldValue(name, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var field = _get(_fields, name);\n    var fieldValue = value;\n    if (field) {\n      var fieldReference = field._f;\n      if (fieldReference) {\n        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n        if (isMultipleSelect(fieldReference.ref)) {\n          _toConsumableArray(fieldReference.ref.options).forEach(function (optionRef) {\n            return optionRef.selected = fieldValue.includes(optionRef.value);\n          });\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(function (checkboxRef) {\n              return (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(function (data) {\n                return data === checkboxRef.value;\n              }) : fieldValue === checkboxRef.value);\n            }) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(function (radioRef) {\n              return radioRef.checked = radioRef.value === fieldValue;\n            });\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name: name,\n              values: _objectSpread({}, _formValues)\n            });\n          }\n        }\n      }\n    }\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n    options.shouldValidate && trigger(name);\n  };\n  var setValues = function setValues(name, value, options) {\n    for (var fieldKey in value) {\n      var fieldValue = value[fieldKey];\n      var fieldName = \"\".concat(name, \".\").concat(fieldKey);\n      var field = _get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n  var setValue = function setValue(name, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var field = _get(_fields, name);\n    var isFieldArray = _names.array.has(name);\n    var cloneValue = cloneObject(value);\n    set(_formValues, name, cloneValue);\n    if (isFieldArray) {\n      _subjects.array.next({\n        name: name,\n        values: _objectSpread({}, _formValues)\n      });\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        _subjects.state.next({\n          name: name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);\n    }\n    isWatched(name, _names) && _subjects.state.next(_objectSpread({}, _formState));\n    _subjects.values.next({\n      name: name,\n      values: _objectSpread({}, _formValues)\n    });\n    !_state.mount && flushRootRender();\n  };\n  var onChange = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(event) {\n      var target, name, field, getCurrentFieldValue, _error2, isValid, fieldValue, isBlurEvent, shouldSkipValidation, watched, fieldState, shouldRender, _yield$_executeSchema2, errors, previousErrorLookupResult, errorLookupResult;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            target = event.target;\n            name = target.name;\n            field = _get(_fields, name);\n            getCurrentFieldValue = function getCurrentFieldValue() {\n              return target.type ? getFieldValue(field._f) : getEventValue(event);\n            };\n            if (!field) {\n              _context6.next = 45;\n              break;\n            }\n            fieldValue = getCurrentFieldValue();\n            isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !_get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, _get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n              field._f.onBlur && field._f.onBlur(event);\n              delayErrorCallback && delayErrorCallback(0);\n            } else if (field._f.onChange) {\n              field._f.onChange(event);\n            }\n            fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent && _subjects.values.next({\n              name: name,\n              type: event.type,\n              values: _objectSpread({}, _formValues)\n            });\n            if (!shouldSkipValidation) {\n              _context6.next = 17;\n              break;\n            }\n            _proxyFormState.isValid && _updateValid();\n            return _context6.abrupt(\"return\", shouldRender && _subjects.state.next(_objectSpread({\n              name: name\n            }, watched ? {} : fieldState)));\n          case 17:\n            !isBlurEvent && watched && _subjects.state.next(_objectSpread({}, _formState));\n            _updateIsValidating(true);\n            if (!_options.resolver) {\n              _context6.next = 31;\n              break;\n            }\n            _context6.next = 22;\n            return _executeSchema([name]);\n          case 22:\n            _yield$_executeSchema2 = _context6.sent;\n            errors = _yield$_executeSchema2.errors;\n            previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n            errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n            _error2 = errorLookupResult.error;\n            name = errorLookupResult.name;\n            isValid = isEmptyObject(errors);\n            _context6.next = 43;\n            break;\n          case 31:\n            _context6.next = 33;\n            return validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation);\n          case 33:\n            _context6.t0 = name;\n            _error2 = _context6.sent[_context6.t0];\n            if (!_error2) {\n              _context6.next = 39;\n              break;\n            }\n            isValid = false;\n            _context6.next = 43;\n            break;\n          case 39:\n            if (!_proxyFormState.isValid) {\n              _context6.next = 43;\n              break;\n            }\n            _context6.next = 42;\n            return executeBuiltInValidation(_fields, true);\n          case 42:\n            isValid = _context6.sent;\n          case 43:\n            field._f.deps && trigger(field._f.deps);\n            shouldRenderByError(name, isValid, _error2, fieldState);\n          case 45:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return function onChange(_x11) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  var trigger = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(name) {\n      var options,\n        isValid,\n        validationResult,\n        fieldNames,\n        errors,\n        _args8 = arguments;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            fieldNames = convertToArrayPayload(name);\n            _updateIsValidating(true);\n            if (!_options.resolver) {\n              _context8.next = 11;\n              break;\n            }\n            _context8.next = 6;\n            return executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n          case 6:\n            errors = _context8.sent;\n            isValid = isEmptyObject(errors);\n            validationResult = name ? !fieldNames.some(function (name) {\n              return _get(errors, name);\n            }) : isValid;\n            _context8.next = 21;\n            break;\n          case 11:\n            if (!name) {\n              _context8.next = 18;\n              break;\n            }\n            _context8.next = 14;\n            return Promise.all(fieldNames.map( /*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(fieldName) {\n                var field;\n                return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                  while (1) switch (_context7.prev = _context7.next) {\n                    case 0:\n                      field = _get(_fields, fieldName);\n                      _context7.next = 3;\n                      return executeBuiltInValidation(field && field._f ? _defineProperty({}, fieldName, field) : field);\n                    case 3:\n                      return _context7.abrupt(\"return\", _context7.sent);\n                    case 4:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }, _callee7);\n              }));\n              return function (_x13) {\n                return _ref15.apply(this, arguments);\n              };\n            }()));\n          case 14:\n            validationResult = _context8.sent.every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n            _context8.next = 21;\n            break;\n          case 18:\n            _context8.next = 20;\n            return executeBuiltInValidation(_fields);\n          case 20:\n            validationResult = isValid = _context8.sent;\n          case 21:\n            _subjects.state.next(_objectSpread(_objectSpread(_objectSpread({}, !isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n              name: name\n            }), _options.resolver || !name ? {\n              isValid: isValid\n            } : {}), {}, {\n              errors: _formState.errors,\n              isValidating: false\n            }));\n            options.shouldFocus && !validationResult && focusFieldBy(_fields, function (key) {\n              return key && _get(_formState.errors, key);\n            }, name ? fieldNames : _names.mount);\n            return _context8.abrupt(\"return\", validationResult);\n          case 24:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return function trigger(_x12) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var getValues = function getValues(fieldNames) {\n    var values = _objectSpread(_objectSpread({}, _defaultValues), _state.mount ? _formValues : {});\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? _get(values, fieldNames) : fieldNames.map(function (name) {\n      return _get(values, name);\n    });\n  };\n  var getFieldState = function getFieldState(name, formState) {\n    return {\n      invalid: !!_get((formState || _formState).errors, name),\n      isDirty: !!_get((formState || _formState).dirtyFields, name),\n      isTouched: !!_get((formState || _formState).touchedFields, name),\n      error: _get((formState || _formState).errors, name)\n    };\n  };\n  var clearErrors = function clearErrors(name) {\n    name && convertToArrayPayload(name).forEach(function (inputName) {\n      return unset(_formState.errors, inputName);\n    });\n    _subjects.state.next({\n      errors: name ? _formState.errors : {}\n    });\n  };\n  var setError = function setError(name, error, options) {\n    var ref = (_get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, _objectSpread(_objectSpread({}, error), {}, {\n      ref: ref\n    }));\n    _subjects.state.next({\n      name: name,\n      errors: _formState.errors,\n      isValid: false\n    });\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n  var watch = function watch(name, defaultValue) {\n    return isFunction(name) ? _subjects.values.subscribe({\n      next: function next(payload) {\n        return name(_getWatch(undefined, defaultValue), payload);\n      }\n    }) : _getWatch(name, defaultValue, true);\n  };\n  var unregister = function unregister(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _iterator7 = _createForOfIteratorHelper(name ? convertToArrayPayload(name) : _names.mount),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var fieldName = _step7.value;\n        _names.mount.delete(fieldName);\n        _names.array.delete(fieldName);\n        if (_get(_fields, fieldName)) {\n          if (!options.keepValue) {\n            unset(_fields, fieldName);\n            unset(_formValues, fieldName);\n          }\n          !options.keepError && unset(_formState.errors, fieldName);\n          !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n          !options.keepTouched && unset(_formState.touchedFields, fieldName);\n          !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    _subjects.values.next({\n      values: _objectSpread({}, _formValues)\n    });\n    _subjects.state.next(_objectSpread(_objectSpread({}, _formState), !options.keepDirty ? {} : {\n      isDirty: _getDirty()\n    }));\n    !options.keepIsValid && _updateValid();\n  };\n  var register = function register(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var field = _get(_fields, name);\n    var disabledIsDefined = isBoolean(options.disabled);\n    set(_fields, name, _objectSpread(_objectSpread({}, field || {}), {}, {\n      _f: _objectSpread(_objectSpread({}, field && field._f ? field._f : {\n        ref: {\n          name: name\n        }\n      }), {}, {\n        name: name,\n        mount: true\n      }, options)\n    }));\n    _names.mount.add(name);\n    field ? disabledIsDefined && set(_formValues, name, options.disabled ? undefined : _get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);\n    return _objectSpread(_objectSpread(_objectSpread({}, disabledIsDefined ? {\n      disabled: options.disabled\n    } : {}), _options.shouldUseNativeValidation ? {\n      required: !!options.required,\n      min: getRuleValue(options.min),\n      max: getRuleValue(options.max),\n      minLength: getRuleValue(options.minLength),\n      maxLength: getRuleValue(options.maxLength),\n      pattern: getRuleValue(options.pattern)\n    } : {}), {}, {\n      name: name,\n      onChange: onChange,\n      onBlur: onChange,\n      ref: function (_ref17) {\n        function ref(_x14) {\n          return _ref17.apply(this, arguments);\n        }\n        ref.toString = function () {\n          return _ref17.toString();\n        };\n        return ref;\n      }(function (ref) {\n        if (ref) {\n          register(name, options);\n          field = _get(_fields, name);\n          var fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          var radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          var refs = field._f.refs || [];\n          if (radioOrCheckbox ? refs.find(function (option) {\n            return option === fieldRef;\n          }) : fieldRef === field._f.ref) {\n            return;\n          }\n          set(_fields, name, {\n            _f: _objectSpread(_objectSpread({}, field._f), radioOrCheckbox ? {\n              refs: [].concat(_toConsumableArray(refs.filter(live)), [fieldRef], _toConsumableArray(Array.isArray(_get(_defaultValues, name)) ? [{}] : [])),\n              ref: {\n                type: fieldRef.type,\n                name: name\n              }\n            } : {\n              ref: fieldRef\n            })\n          });\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = _get(_fields, name, {});\n          if (field._f) {\n            field._f.mount = false;\n          }\n          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);\n        }\n      })\n    });\n  };\n  var _focusError = function _focusError() {\n    return _options.shouldFocusError && focusFieldBy(_fields, function (key) {\n      return key && _get(_formState.errors, key);\n    }, _names.mount);\n  };\n  var handleSubmit = function handleSubmit(onValid, onInvalid) {\n    return /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {\n        var fieldValues, _yield$_executeSchema3, errors, values;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (e) {\n                e.preventDefault && e.preventDefault();\n                e.persist && e.persist();\n              }\n              fieldValues = cloneObject(_formValues);\n              _subjects.state.next({\n                isSubmitting: true\n              });\n              if (!_options.resolver) {\n                _context9.next = 13;\n                break;\n              }\n              _context9.next = 6;\n              return _executeSchema();\n            case 6:\n              _yield$_executeSchema3 = _context9.sent;\n              errors = _yield$_executeSchema3.errors;\n              values = _yield$_executeSchema3.values;\n              _formState.errors = errors;\n              fieldValues = values;\n              _context9.next = 15;\n              break;\n            case 13:\n              _context9.next = 15;\n              return executeBuiltInValidation(_fields);\n            case 15:\n              unset(_formState.errors, 'root');\n              if (!isEmptyObject(_formState.errors)) {\n                _context9.next = 22;\n                break;\n              }\n              _subjects.state.next({\n                errors: {}\n              });\n              _context9.next = 20;\n              return onValid(fieldValues, e);\n            case 20:\n              _context9.next = 27;\n              break;\n            case 22:\n              if (!onInvalid) {\n                _context9.next = 25;\n                break;\n              }\n              _context9.next = 25;\n              return onInvalid(_objectSpread({}, _formState.errors), e);\n            case 25:\n              _focusError();\n              setTimeout(_focusError);\n            case 27:\n              _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors),\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors\n              });\n            case 28:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      return function (_x15) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n  };\n  var resetField = function resetField(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (_get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, _get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue ? _getDirty(name, _get(_defaultValues, name)) : _getDirty();\n      }\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n      _subjects.state.next(_objectSpread({}, _formState));\n    }\n  };\n  var _reset = function _reset(formValues) {\n    var keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var updatedValues = formValues || _defaultValues;\n    var cloneUpdatedValues = cloneObject(updatedValues);\n    var values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        var _iterator8 = _createForOfIteratorHelper(_names.mount),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var fieldName = _step8.value;\n            _get(_formState.dirtyFields, fieldName) ? set(values, fieldName, _get(_formValues, fieldName)) : setValue(fieldName, _get(values, fieldName));\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          var _iterator9 = _createForOfIteratorHelper(_names.mount),\n            _step9;\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var _name6 = _step9.value;\n              var _field = _get(_fields, _name6);\n              if (_field && _field._f) {\n                var fieldReference = Array.isArray(_field._f.refs) ? _field._f.refs[0] : _field._f.ref;\n                if (isHTMLElement(fieldReference)) {\n                  var form = fieldReference.closest('form');\n                  if (form) {\n                    form.reset();\n                    break;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n        }\n        _fields = {};\n      }\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneUpdatedValues;\n      _subjects.array.next({\n        values: _objectSpread({}, values)\n      });\n      _subjects.values.next({\n        values: _objectSpread({}, values)\n      });\n    }\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n    !_state.mount && flushRootRender();\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _state.watch = !!props.shouldUnregister;\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  var reset = function reset(formValues, keepStateOptions) {\n    return _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);\n  };\n  var setFocus = function setFocus(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var field = _get(_fields, name);\n    var fieldReference = field && field._f;\n    if (fieldReference) {\n      var fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n  var _updateFormState = function _updateFormState(updatedFormState) {\n    _formState = _objectSpread(_objectSpread({}, _formState), updatedFormState);\n  };\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then(function (values) {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false\n      });\n    });\n  }\n  return {\n    control: {\n      register: register,\n      unregister: unregister,\n      getFieldState: getFieldState,\n      _executeSchema: _executeSchema,\n      _getWatch: _getWatch,\n      _getDirty: _getDirty,\n      _updateValid: _updateValid,\n      _removeUnmounted: _removeUnmounted,\n      _updateFieldArray: _updateFieldArray,\n      _getFieldArray: _getFieldArray,\n      _reset: _reset,\n      _updateFormState: _updateFormState,\n      _subjects: _subjects,\n      _proxyFormState: _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = _objectSpread(_objectSpread({}, _options), value);\n      }\n    },\n    trigger: trigger,\n    register: register,\n    handleSubmit: handleSubmit,\n    watch: watch,\n    setValue: setValue,\n    getValues: getValues,\n    reset: reset,\n    resetField: resetField,\n    clearErrors: clearErrors,\n    unregister: unregister,\n    setError: setError,\n    setFocus: setFocus,\n    getFieldState: getFieldState\n  };\n}\n\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\nfunction useForm() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _formControl = React.useRef();\n  var _React$useState7 = React.useState({\n      isDirty: false,\n      isValidating: false,\n      isLoading: true,\n      isSubmitted: false,\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n      isValid: false,\n      submitCount: 0,\n      dirtyFields: {},\n      touchedFields: {},\n      errors: {},\n      defaultValues: isFunction(props.defaultValues) ? undefined : props.defaultValues\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    formState = _React$useState8[0],\n    updateFormState = _React$useState8[1];\n  if (!_formControl.current) {\n    _formControl.current = _objectSpread(_objectSpread({}, createFormControl(props, function () {\n      return updateFormState(function (formState) {\n        return _objectSpread({}, formState);\n      });\n    })), {}, {\n      formState: formState\n    });\n  }\n  var control = _formControl.current.control;\n  control._options = props;\n  useSubscribe({\n    subject: control._subjects.state,\n    next: function next(value) {\n      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n        updateFormState(_objectSpread({}, control._formState));\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n  React.useEffect(function () {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next(_objectSpread({}, control._formState));\n    }\n    control._removeUnmounted();\n  });\n  _formControl.current.formState = getProxyFormState(formState, control);\n  return _formControl.current;\n}\nexport { Controller, FormProvider, appendErrors, _get as get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };","map":{"version":3,"names":["isCheckBoxInput","element","type","isDateObject","value","Date","isNullOrUndefined","isObjectType","isObject","Array","isArray","getEventValue","event","target","checked","getNodeParentName","name","substring","search","isNameInFieldArray","names","has","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","window","HTMLElement","document","cloneObject","data","copy","Set","Blob","FileList","key","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","HookFormContext","React","createContext","useFormContext","useContext","FormProvider","props","children","_objectWithoutProperties","_excluded","createElement","Provider","getProxyFormState","formState","control","localProxyFormState","isRoot","arguments","length","defaultValues","_defaultValues","_loop","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","shouldRenderFormState","formStateData","updateFormState","_excluded2","find","convertToArrayPayload","shouldSubscribeByName","signalName","exact","some","currentName","startsWith","useSubscribe","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","unsubscribe","useFormState","methods","_ref","_ref$control","_React$useState","useState","_formState","_React$useState2","_slicedToArray","_mounted","_localProxyFormState","isDirty","isLoading","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_updateFormState","_objectSpread","_subjects","state","_getDirty","_updateValid","isString","generateWatchOutput","_names","formValues","isGlobal","watch","add","map","fieldName","watchAll","useWatch","_ref2","_ref2$control","values","updateValue","_formValues","_React$useState3","_getWatch","_React$useState4","_removeUnmounted","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","useController","_props$control","shouldUnregister","isArrayField","array","_registerProps","register","rules","_shouldUnregisterField","_options","updateMounted","field","_fields","_f","mount","_state","action","unregister","useCallback","ref","elm","focus","select","setCustomValidity","message","reportValidity","fieldState","defineProperties","invalid","enumerable","isTouched","error","Controller","render","appendErrors","validateAllFieldCriteria","types","_defineProperty","focusFieldBy","fields","callback","fieldsNames","_iterator","_createForOfIteratorHelper","_step","s","n","done","currentField","_excluded3","refs","err","e","f","generateId","d","performance","now","c","r","Math","random","toString","getFocusFieldName","options","shouldFocus","focusName","concat","focusIndex","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","_toConsumableArray","watchName","slice","updateFieldArrayRootError","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","validResult","getCheckboxValue","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","shouldUseNativeValidation","isFieldArray","_field$_f","valueAsNumber","inputValue","inputRef","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","_ref4","exceedMax","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","isTime","isWeek","maxLengthOutput","minLengthOutput","_exceedMax","_exceedMin","_getValueAndMessage","patternValue","_message","validateError","validationResult","_validateError","wrap","_callee$","_context","prev","abrupt","bind","maxLengthMessage","minLengthMessage","maxType","minType","valueAsDate","time","toDateString","match","sent","t0","t1","t2","t3","t4","t5","stop","_x","_x2","_x3","_x4","_x5","apply","append","fillEmptyArray","insert","moveArrayAt","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","_iterator2","_step2","removeArrayAt","sort","a","b","swapArrayAt","indexA","indexB","baseGet","updatePath","isEmptyArray","unset","paths","childObject","updateAt","fieldValues","useFieldArray","_props$control2","_props$keyName","keyName","_React$useState5","_getFieldArray","_React$useState6","setFields","ids","_fieldIds","_actioned","_ref5","fieldArrayName","updateValues","updatedFieldArrayValues","_updateFieldArray","append$1","appendValue","argA","prepend$1","prependValue","remove","insert$1","insertValue","argB","swap","move","update","item","isSubmitted","resolver","_executeSchema","then","existingError","criteriaMode","useMemo","createSubject","_observers","_iterator3","_step3","observer","push","o","observers","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","_i","_keys","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","_ref6","setValueAs","NaN","getFieldValue","files","selectedOptions","_ref7","getResolverOptions","_iterator4","_step4","getRuleValue","rule","source","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","flushRootRender","submitCount","isSubmitting","isSubmitSuccessful","unMount","delayErrorCallback","timer","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","_ref8","_callee2","shouldUpdateValid","_callee2$","_context2","executeBuiltInValidation","_x6","_updateIsValidating","method","args","shouldSetValues","shouldUpdateFieldsAndState","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","previousFieldError","delayError","updatedFormState","_ref9","_callee3","_callee3$","_context3","context","_x7","executeSchemaAndUpdateState","_ref10","_callee4","_yield$_executeSchema","_iterator5","_step5","_name3","_error","_callee4$","_context4","_x8","_ref11","_callee5","shouldOnlyCheckValid","_name4","isFieldArrayRoot","fieldError","_args5","_callee5$","_context5","valid","_excluded4","_x9","_x10","_iterator6","_step6","getValues","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","_ref13","_callee6","getCurrentFieldValue","_error2","shouldSkipValidation","watched","_yield$_executeSchema2","previousErrorLookupResult","errorLookupResult","_callee6$","_context6","deps","_x11","_ref14","_callee8","fieldNames","_args8","_callee8$","_context8","Promise","_ref15","_callee7","_callee7$","_context7","_x13","_x12","getFieldState","clearErrors","inputName","setError","payload","_iterator7","_step7","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","disabledIsDefined","_ref17","_x14","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","_ref18","_callee9","_yield$_executeSchema3","_callee9$","_context9","preventDefault","persist","_x15","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","_iterator8","_step8","_iterator9","_step9","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","useForm","_formControl","_React$useState7","_React$useState8"],"sources":["/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isDateObject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isObject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getEventValue.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getNodeParentName.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isPlainObject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isWeb.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/cloneObject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/compact.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isUndefined.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/get.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/constants.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useFormContext.tsx","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getProxyFormState.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isEmptyObject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useSubscribe.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useFormState.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isString.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/generateWatchOutput.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useWatch.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isKey.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/stringToPath.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/set.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useController.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/controller.tsx","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/appendErrors.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/focusFieldBy.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/generateId.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getFocusFieldName.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getValidationModes.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/isWatched.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isBoolean.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isFileInput.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isFunction.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isHTMLElement.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isMessage.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isRadioInput.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isRegex.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getCheckboxValue.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getRadioValue.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getValidateError.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getValueAndMessage.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/validateField.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/append.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/fillEmptyArray.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/insert.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/move.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/prepend.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/remove.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/swap.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/unset.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/update.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useFieldArray.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/createSubject.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isPrimitive.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/deepEqual.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isMultipleSelect.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/live.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/utils/objectHasFunction.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getDirtyFields.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getFieldValueAs.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getFieldValue.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getResolverOptions.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/getRuleValue.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/hasValidation.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/skipValidation.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/logic/createFormControl.ts","/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/react-hook-form/src/useForm.ts"],"sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path?: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(\n        value,\n        _localProxyFormState.current,\n        control._updateFormState,\n      ) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty,\n      });\n    }\n\n    _localProxyFormState.current.isValid && control._updateValid(true);\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        updateValue(\n          cloneObject(\n            generateWatchOutput(\n              _name.current as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              defaultValue,\n            ),\n          ),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      defaultValue as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport cloneObject from './utils/cloneObject';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\nimport { set } from './utils';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n    }),\n  );\n\n  React.useEffect(() => {\n    const _shouldUnregisterField =\n      control._options.shouldUnregister || shouldUnregister;\n\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    if (_shouldUnregisterField) {\n      set(\n        control._defaultValues,\n        name,\n        cloneObject(get(control._options.defaultValues, name)),\n      );\n    }\n\n    return () => {\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._state.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(\n        (event) =>\n          _registerProps.current.onChange({\n            target: {\n              value: getEventValue(event),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.CHANGE,\n          }),\n        [name],\n      ),\n      onBlur: React.useCallback(\n        () =>\n          _registerProps.current.onBlur({\n            target: {\n              value: get(control._formValues, name),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.BLUR,\n          }),\n        [name, control],\n      ),\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: Object.defineProperties(\n      {},\n      {\n        invalid: {\n          enumerable: true,\n          get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n          enumerable: true,\n          get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n          enumerable: true,\n          get: () => !!get(formState.touchedFields, name),\n        },\n        error: {\n          enumerable: true,\n          get: () => get(formState.errors, name),\n        },\n      },\n    ) as ControllerFieldState,\n  };\n}\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...data, ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n    ? [path]\n    : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport getValidationModes from './logic/getValidationModes';\nimport isWatched from './logic/isWatched';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  props.rules &&\n    (control as Control<TFieldValues>).register(\n      name as FieldPath<TFieldValues>,\n      props.rules as RegisterOptions<TFieldValues>,\n    );\n\n  useSubscribe({\n    next: ({\n      values,\n      name: fieldArrayName,\n    }: {\n      values?: FieldValues;\n      name?: InternalFieldName;\n    }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._state.action = false;\n\n    isWatched(name, control._names) &&\n      control._subjects.state.next({\n        ...control._formState,\n      } as FormState<TFieldValues>);\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted)\n    ) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError ? !error && existingError.type : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (field && field._f) {\n          validateField(\n            field,\n            control._formValues,\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors as FieldErrors<TFieldValues>,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.values.next({\n      name,\n      values: { ...control._formValues },\n    });\n\n    control._names.focus &&\n      focusFieldBy(\n        control._fields,\n        (key) => !!key && key.startsWith(control._names.focus || ''),\n      );\n\n    control._names.focus = '';\n\n    control._updateValid();\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n  flushRootRender: () => void,\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const shouldCaptureDirtyFields =\n    props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (value: boolean) =>\n    _proxyFormState.isValidating &&\n    _subjects.state.next({\n      isValidating: value,\n    });\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField ||\n        (_proxyFormState.dirtyFields &&\n          isPreviousDirty !== !isCurrentFieldPristine);\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name,\n      values: { ..._formValues },\n    });\n    !_state.mount && flushRootRender();\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        await onValid(fieldValues as TFieldValues, e);\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors),\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    !_state.mount && flushRootRender();\n\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _state.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : !!(\n            keepStateOptions.keepDefaultValues &&\n            !deepEqual(formValues, _defaultValues)\n          ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirtyValues\n        ? _formState.dirtyFields\n        : keepStateOptions.keepDefaultValues && formValues\n        ? getDirtyFields(_defaultValues, formValues)\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then((values) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n  }\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () =>\n        updateFormState((formState) => ({ ...formState })),\n      ),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}