{"ast":null,"code":"import _objectSpread from\"/home/devi/BMI/services/biomultitool/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/devi/BMI/services/biomultitool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useForm}from'react-hook-form';import{useEffect,useState}from'react';import{get,sendForm,ProgressBar}from'../Utils/Utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SkaniForm=function SkaniForm(){var Skani=function Skani(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var _useState=useState(),_useState2=_slicedToArray(_useState,2),databases=_useState2[0],setDatabases=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var getSkaniDb=function getSkaniDb(){get(\"/db/skani-sketch\").then(function(entries){return setDatabases(entries.map(function(entry){return/*#__PURE__*/_jsx(\"option\",{value:entry.name,children:entry.title},entry._id);}));});};useEffect(getSkaniDb,[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"ToolForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"DbTitle\",children:\"Skani\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(function(data){return sendForm(data,data.type,setProgress);}),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\")),{},{type:\"text\",placeholder:\"Title\"})),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({defaultValue:\"/services/skani-search\",required:true},register(\"type\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"/services/skani-search\",children:\"Search\"}),/*#__PURE__*/_jsx(\"option\",{value:\"/services/skani-dist\",children:\"Dist\"})]})),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"query\")),{},{type:\"text\",placeholder:\"Query\",spellCheck:\"false\"})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"files\")),{},{type:\"file\",multiple:true})),/*#__PURE__*/_jsx(ProgressBar,{progress:progress}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({required:true},register(\"db\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a sketch\"}),databases]})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"args\")),{},{placeholder:\"Arguments\",type:\"text\"})),/*#__PURE__*/_jsx(\"input\",{disabled:progress<=99&&progress>=1,type:\"submit\"})]})]});};var SkaniSketch=function SkaniSketch(){var _useForm2=useForm(),register=_useForm2.register,handleSubmit=_useForm2.handleSubmit;var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),progress=_useState6[0],setProgress=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"ToolForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"DbTitle\",children:\"Skani Sketch\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(function(data){return sendForm(_objectSpread({type:\"sketch\"},data),'/services/skani-sketch',setProgress);}),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\")),{},{type:\"text\",placeholder:\"Title\"})),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"query\")),{},{type:\"text\",placeholder:\"Query\",spellCheck:\"false\"})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"files\")),{},{type:\"file\",multiple:true})),/*#__PURE__*/_jsx(ProgressBar,{progress:progress}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"args\")),{},{placeholder:\"Arguments\",type:\"text\"})),/*#__PURE__*/_jsx(\"input\",{disabled:progress<=99&&progress>=1,type:\"submit\"})]})]});};var SkaniTriangle=function SkaniTriangle(){var _useForm3=useForm(),register=_useForm3.register,handleSubmit=_useForm3.handleSubmit;var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),progress=_useState8[0],setProgress=_useState8[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"ToolForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"DbTitle\",children:\"Skani Triangle\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(function(data){return sendForm(data,'/services/skani-triangle',setProgress);}),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\")),{},{type:\"text\",placeholder:\"Title\"})),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"query\")),{},{type:\"text\",placeholder:\"Query\",spellCheck:\"false\"})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"files\")),{},{type:\"file\",multiple:true})),/*#__PURE__*/_jsx(ProgressBar,{progress:progress}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"args\")),{},{placeholder:\"Arguments\",type:\"text\"})),/*#__PURE__*/_jsx(\"input\",{disabled:progress<=99&&progress>=1,type:\"submit\"})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:'Form',children:[/*#__PURE__*/_jsx(Skani,{}),/*#__PURE__*/_jsx(SkaniSketch,{}),/*#__PURE__*/_jsx(SkaniTriangle,{})]});};export default SkaniForm;","map":{"version":3,"names":["useForm","useEffect","useState","get","sendForm","ProgressBar","jsx","_jsx","jsxs","_jsxs","SkaniForm","Skani","_useForm","register","handleSubmit","_useState","_useState2","_slicedToArray","databases","setDatabases","_useState3","_useState4","progress","setProgress","getSkaniDb","then","entries","map","entry","value","name","children","title","_id","className","onSubmit","data","type","_objectSpread","placeholder","defaultValue","required","spellCheck","multiple","disabled","SkaniSketch","_useForm2","_useState5","_useState6","SkaniTriangle","_useForm3","_useState7","_useState8"],"sources":["/home/devi/BMI/services/biomultitool/frontend/src/components/Skani/Skani.js"],"sourcesContent":["import { useForm } from 'react-hook-form'\nimport { useEffect, useState } from 'react'\nimport { get, sendForm, ProgressBar } from '../Utils/Utils'\n\nconst SkaniForm = () => {\n\nconst Skani = () => {\n\nconst {register, handleSubmit} = useForm()\nconst [databases, setDatabases] = useState()\nconst [progress, setProgress] = useState(0)\n\nconst getSkaniDb = () => {\n\t\tget(`/db/skani-sketch`).then(entries => setDatabases(entries.map( entry => { return <option key={ entry._id } value={ entry.name }>{ entry.title }</option> })))\n}\n\nuseEffect(getSkaniDb, [])\n\n\treturn (\n\t\t<div className='ToolForm'>\n\t\t\t<div className='DbTitle'>Skani</div>\n\t\t\t<form onSubmit={ handleSubmit(data => sendForm(data, data.type, setProgress)) }>\n\t\t\t\t<input {...register(\"title\") } type=\"text\" placeholder=\"Title\" />\n\t\t\t\t<select defaultValue=\"/services/skani-search\" required {...register(\"type\") } >\n\t\t\t\t\t<option value=\"/services/skani-search\">Search</option>\n\t\t\t\t\t<option value=\"/services/skani-dist\">Dist</option>\n\t\t\t\t</select>\n\t\t\t\t<textarea {...register(\"query\") } type=\"text\" placeholder=\"Query\" spellCheck=\"false\" />\n\t\t\t\t<input {...register(\"files\") } type=\"file\" multiple/>\n\t\t\t\t<ProgressBar progress={ progress }/>\n\t\t\t\t<select required {...register(\"db\") } >\n\t\t\t\t\t<option value=\"\">Select a sketch</option>\n\t\t\t\t\t{ databases }\n\t\t\t\t</select>\n\t\t\t\t<input {...register(\"args\")} placeholder=\"Arguments\" type=\"text\" />\n\t\t\t\t<input disabled={ (progress<=99 && progress>=1) } type=\"submit\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst SkaniSketch = () => {\n\t\n\tconst {register, handleSubmit} = useForm()\n\tconst [progress, setProgress] = useState(0)\n\n\treturn (\n\t\t<div className='ToolForm'>\n\t\t\t<div className='DbTitle'>Skani Sketch</div>\n\t\t\t<form onSubmit={handleSubmit(data => sendForm({ type:`sketch`, ...data }, '/services/skani-sketch', setProgress))}>\n\t\t\t\t<input {...register(\"title\")} type=\"text\" placeholder=\"Title\"/>\n\t\t\t\t<textarea {...register(\"query\")} type=\"text\" placeholder=\"Query\" spellCheck=\"false\" />\n\t\t\t\t<input {...register(\"files\")} type=\"file\" multiple/>\n\t\t\t\t<ProgressBar progress={ progress }/>\n\t\t\t\t<input {...register(\"args\")} placeholder=\"Arguments\" type=\"text\" />\n\t\t\t\t<input disabled={ (progress<=99 && progress>=1) } type=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst SkaniTriangle = () => {\n\t\n\tconst {register, handleSubmit} = useForm()\n\tconst [progress, setProgress] = useState(0)\n\n\treturn (\n\t\t<div className='ToolForm'>\n\t\t\t<div className='DbTitle'>Skani Triangle</div>\n\t\t\t<form onSubmit={handleSubmit(data => sendForm(data, '/services/skani-triangle', setProgress))}>\n\t\t\t\t<input {...register(\"title\")} type=\"text\" placeholder=\"Title\"/>\n\t\t\t\t<textarea {...register(\"query\")} type=\"text\" placeholder=\"Query\" spellCheck=\"false\" />\n\t\t\t\t<input {...register(\"files\")} type=\"file\" multiple/>\n\t\t\t\t<ProgressBar progress={ progress }/>\n\t\t\t\t<input {...register(\"args\")} placeholder=\"Arguments\" type=\"text\" />\n\t\t\t\t<input disabled={ (progress<=99 && progress>=1) } type=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\n\treturn(\n\t\t<div className={'Form'}>\n\t\t\t<Skani/>\n\t\t\t<SkaniSketch/>\n\t\t\t<SkaniTriangle/>\n\t\t</div>\n\t)\n\n}\nexport default SkaniForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}