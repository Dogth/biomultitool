{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Databases.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Databases = () => {\n  _s();\n  const DbEntry = _ref => {\n    let {\n      data\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Title\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 4\n      }, this), data._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this);\n  };\n  const [blastDb, setBlastDb] = useState(null);\n  const [skaniSketch, setSkani] = useState(null);\n  const getMany = (Db, hook) => {\n    axios.get(`http://192.168.1.37:8080/db/${Db}`).then(res => {\n      hook(res.data.map(entry => {\n        return /*#__PURE__*/_jsxDEV(DbEntry, {\n          data: entry\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 99\n        }, this);\n      }));\n    });\n  };\n  const getDbs = () => {\n    getMany(`blast-db`, setBlastDb);\n    getMany(`skani-sketch`, setSkani);\n  };\n  useEffect(getDbs, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DatabaseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Db\",\n      children: blastDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Db\",\n      children: skaniSketch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n_s(Databases, \"z/lvEidTsImVgqt2RPBbY4MD8xI=\");\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Databases","_s","DbEntry","_ref","data","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_id","blastDb","setBlastDb","skaniSketch","setSkani","getMany","Db","hook","get","then","res","map","entry","getDbs","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js"],"sourcesContent":["import axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport './Databases.css'\n\nconst Databases = () => {\n\nconst DbEntry = ({ data }) => {\n\treturn (\n\t\t<div className='Entry'>\n\t\t\t<p className='Title'>{data.title}</p>\n\t\t\t{data._id}\n\t\t</div>\n\t)\n}\n\nconst [blastDb, setBlastDb] = useState(null)\nconst [skaniSketch, setSkani] = useState(null)\n\nconst getMany = (Db, hook) => {\n\taxios.get(`http://192.168.1.37:8080/db/${Db}`).then(res => { hook(res.data.map(entry => { return <DbEntry key={ entry._id } data={ entry }/> })) })\n}\n\nconst getDbs = () => {\n\tgetMany(`blast-db`, setBlastDb)\n\tgetMany(`skani-sketch`, setSkani)\n}\n\nuseEffect(getDbs,[])\n\n\treturn (\n\t\t<div className='DatabaseList'>\n\t\t\t<div className='Db'>{blastDb}</div>\n\t\t\t<div className='Db'>{skaniSketch}</div>\n\t\t</div>\n\t)\n}\n\nexport default Databases\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAMC,OAAO,GAAGC,IAAA,IAAc;IAAA,IAAb;MAAEC;IAAK,CAAC,GAAAD,IAAA;IACxB,oBACCJ,OAAA;MAAKM,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACrBP,OAAA;QAAGM,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEF,IAAI,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACpCP,IAAI,CAACQ,GAAG;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAER,CAAC;EAED,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,WAAW,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMoB,OAAO,GAAGA,CAACC,EAAE,EAAEC,IAAI,KAAK;IAC7BxB,KAAK,CAACyB,GAAG,CAAE,+BAA8BF,EAAG,EAAC,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;MAAEH,IAAI,CAACG,GAAG,CAAClB,IAAI,CAACmB,GAAG,CAACC,KAAK,IAAI;QAAE,oBAAOzB,OAAA,CAACG,OAAO;UAAmBE,IAAI,EAAGoB;QAAO,GAA1BA,KAAK,CAACZ,GAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAmB;MAAC,CAAC,CAAC,CAAC;IAAC,CAAC,CAAC;EACpJ,CAAC;EAED,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACpBR,OAAO,CAAE,UAAS,EAAEH,UAAU,CAAC;IAC/BG,OAAO,CAAE,cAAa,EAAED,QAAQ,CAAC;EAClC,CAAC;EAEDpB,SAAS,CAAC6B,MAAM,EAAC,EAAE,CAAC;EAEnB,oBACC1B,OAAA;IAAKM,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BP,OAAA;MAAKM,SAAS,EAAC,IAAI;MAAAC,QAAA,EAAEO;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACnCZ,OAAA;MAAKM,SAAS,EAAC,IAAI;MAAAC,QAAA,EAAES;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAER,CAAC;AAAAV,EAAA,CA/BKD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAiCf,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}