{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { get, dbBackgrounds, del, deleteAnim } from '../Tools/Utils/Utils';\nimport './Databases.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Databases = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [blastDb, setBlastDb] = useState(null);\n  const [skaniSketch, setSkani] = useState(null);\n  const DbEntry = _ref => {\n    _s();\n    var _dbBackgrounds$data$t;\n    let {\n      data,\n      collection\n    } = _ref;\n    const [style, setStyle] = useState({});\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Entry\",\n      style: {\n        background: (_dbBackgrounds$data$t = dbBackgrounds[data.type]) !== null && _dbBackgrounds$data$t !== void 0 ? _dbBackgrounds$data$t : `var(--paleOrange)`,\n        ...style\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete\",\n        onClick: () => del(`/db/${db}/${data._id}`, () => setStyle(deleteAnim))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Title\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Type\",\n        children: data.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Id\",\n        children: data._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }, this);\n  };\n  _s(DbEntry, \"KenMAwU6PtUB6f0mae8b+lYL968=\");\n  const getMany = (collection, hook) => {\n    get(`/db/${collection}`).then(entries => {\n      hook(entries.map(entry => {\n        return /*#__PURE__*/_jsxDEV(DbEntry, {\n          data: entry,\n          collection: collection\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 80\n        }, this);\n      }));\n    });\n  };\n  const getDbs = () => {\n    getMany(`blast-db`, setBlastDb);\n    getMany(`skani-sketch`, setSkani);\n  };\n  useEffect(getDbs, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DatabaseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Blast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Db\",\n        children: blastDb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Skani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Db\",\n        children: skaniSketch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s2(Databases, \"z/lvEidTsImVgqt2RPBbY4MD8xI=\");\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["useEffect","useState","get","dbBackgrounds","del","deleteAnim","jsxDEV","_jsxDEV","Databases","_s2","_s","$RefreshSig$","blastDb","setBlastDb","skaniSketch","setSkani","DbEntry","_ref","_dbBackgrounds$data$t","data","collection","style","setStyle","className","background","type","children","onClick","db","_id","fileName","_jsxFileName","lineNumber","columnNumber","title","getMany","hook","then","entries","map","entry","getDbs","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { get, dbBackgrounds, del, deleteAnim } from '../Tools/Utils/Utils'\nimport './Databases.css'\n\nconst Databases = () => {\n\nconst [blastDb, setBlastDb] = useState(null)\nconst [skaniSketch, setSkani] = useState(null)\n\nconst DbEntry = ({ data, collection }) => {\n\tconst [style, setStyle] = useState({ })\n\treturn (\n\t\t<div className='Entry' style={{ background: dbBackgrounds[data.type]??`var(--paleOrange)`, ...style }}>\n\t\t\t<button className='Delete' onClick={() => del(`/db/${db}/${data._id}`, () => setStyle(deleteAnim)) }></button>\n\t\t\t<p className='Title'>{ data.title }</p>\n\t\t\t<p className='Type'>{ data.type }</p>\n\t\t\t<p className='Id'>{ data._id }</p>\n\t\t</div>\n\t)\n}\n\nconst getMany = (collection, hook) => {\n\tget(`/db/${collection}`).then(entries => { hook(entries.map(entry => { return <DbEntry key={ entry._id } data={ entry } collection={ collection }/> })) })\n}\n\nconst getDbs = () => {\n\n\tgetMany(`blast-db`, setBlastDb)\n\tgetMany(`skani-sketch`, setSkani)\n}\n\nuseEffect(getDbs,[])\n\n\treturn (\n\t\t<div className='DatabaseList'>\n\t\t\t<div className='DbWrapper'><div className='DbTitle'>Blast</div><div className='Db'>{blastDb}</div></div>\n\t\t\t<div className='DbWrapper'><div className='DbTitle'>Skani</div><div className='Db'>{skaniSketch}</div></div>\n\t\t</div>\n\t)\n}\n\nexport default Databases\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}