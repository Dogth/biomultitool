{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js\",\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Databases.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Databases = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const DbEntry = _ref => {\n    _s();\n    var _backgrounds$get;\n    let {\n      data,\n      Db\n    } = _ref;\n    const backgrounds = new Map([[\"nucl\", \"var(--paleGreen)\"], [\"prot\", \"var(--paleBlue)\"], [\"untyped\", \"var(--paleOrange)\"]]);\n    const background = (_backgrounds$get = backgrounds.get(data.type)) !== null && _backgrounds$get !== void 0 ? _backgrounds$get : \"var(--paleRed)\";\n    const [style, setStyle] = useState({\n      backgroundColor: background\n    });\n    const deleteAnim = () => {\n      setStyle({\n        animation: 'Deletion .6s',\n        backgroundColor: background\n      });\n      setTimeout(() => {\n        setStyle({\n          display: 'none'\n        });\n      }, 400);\n    };\n    const delOne = (Db, id) => {\n      axios.delete(`http://192.168.1.37:8080/db/${Db}/${id}`).then(() => deleteAnim());\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Entry\",\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete\",\n        onClick: () => delOne(Db, data._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Title\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Type\",\n        children: data.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }, this), data._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this);\n  };\n  _s(DbEntry, \"oD6xIA6qwJAgMe4Jn18ju8KyZjc=\");\n  const [blastDb, setBlastDb] = useState(null);\n  const [skaniSketch, setSkani] = useState(null);\n  const getMany = (Db, hook) => {\n    axios.get(`http://192.168.1.37:8080/db/${Db}`).then(res => {\n      hook(res.data.reverse().map(entry => {\n        return /*#__PURE__*/_jsxDEV(DbEntry, {\n          data: entry,\n          Db: Db\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 109\n        }, this);\n      }));\n    });\n  };\n  const getDbs = () => {\n    getMany(`blast-db`, setBlastDb);\n    getMany(`skani-sketch`, setSkani);\n  };\n  useEffect(getDbs, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DatabaseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Blast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Db\",\n        children: blastDb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Skani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Db\",\n        children: skaniSketch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n_s2(Databases, \"z/lvEidTsImVgqt2RPBbY4MD8xI=\");\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Databases","_s2","_s","$RefreshSig$","DbEntry","_ref","_backgrounds$get","data","Db","backgrounds","Map","background","get","type","style","setStyle","backgroundColor","deleteAnim","animation","setTimeout","display","delOne","id","delete","then","className","children","onClick","_id","fileName","_jsxFileName","lineNumber","columnNumber","title","blastDb","setBlastDb","skaniSketch","setSkani","getMany","hook","res","reverse","map","entry","getDbs","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/frontend/biomultitool/src/components/Databases/Databases.js"],"sourcesContent":["import axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport './Databases.css'\n\nconst Databases = () => {\n\nconst DbEntry = ({ data, Db}) => {\n\n\tconst backgrounds = new Map([\n\t\t[\"nucl\",\"var(--paleGreen)\"],\n\t\t[\"prot\",\"var(--paleBlue)\"],\n\t\t[\"untyped\",\"var(--paleOrange)\"]\n\t])\n\n\tconst background = backgrounds.get(data.type)??\"var(--paleRed)\"\n\n\tconst [style, setStyle] = useState({backgroundColor:background})\n\n\tconst deleteAnim = () => {\n\t\tsetStyle({ animation:'Deletion .6s', backgroundColor:background})\n\t\tsetTimeout(() => { setStyle({display:'none'}) }, 400)\n\t}\n\n\tconst delOne = (Db, id) => {\n\taxios.delete(`http://192.168.1.37:8080/db/${Db}/${id}`).then(() => deleteAnim())\n\t}\n\n\treturn (\n\t\t<div className='Entry' style={style}>\n\t\t\t<button className='Delete' onClick={() => delOne(Db, data._id) }></button>\n\t\t\t<p className='Title'>{data.title}</p>\n\t\t\t<p className='Type'>{data.type}</p>\n\t\t\t{data._id}\n\t\t</div>\n\t)\n}\n\nconst [blastDb, setBlastDb] = useState(null)\nconst [skaniSketch, setSkani] = useState(null)\n\nconst getMany = (Db, hook) => {\n\taxios.get(`http://192.168.1.37:8080/db/${Db}`).then(res => { hook(res.data.reverse().map(entry => { return <DbEntry key={ entry._id } data={ entry } Db={ Db }/> })) })\n}\n\nconst getDbs = () => {\n\tgetMany(`blast-db`, setBlastDb)\n\tgetMany(`skani-sketch`, setSkani)\n}\n\nuseEffect(getDbs,[])\n\n\treturn (\n\t\t<div className='DatabaseList'>\n\t\t\t<div className='DbWrapper'><div className='DbTitle'>Blast</div><div className='Db'>{blastDb}</div></div>\n\t\t\t<div className='DbWrapper'><div className='DbTitle'>Skani</div><div className='Db'>{skaniSketch}</div></div>\n\t\t</div>\n\t)\n}\n\nexport default Databases\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}