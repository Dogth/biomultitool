{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/frontend/biomultitool/src/components/Tasks/Tasks.js\",\n  _s2 = $RefreshSig$();\nimport './Tasks.css';\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getCollection, backgrounds, deleteAnim } from '../Tools/Utils/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const Task = _ref => {\n    _s();\n    var _backgrounds$data$sta;\n    let {\n      data,\n      onClick\n    } = _ref;\n    const [style, setStyle] = useState({\n      backgroundColor: (_backgrounds$data$sta = backgrounds[data.status]) !== null && _backgrounds$data$sta !== void 0 ? _backgrounds$data$sta : \"var(--paleRed)\"\n    });\n    const deleteTask = _ref2 => {\n      let {\n        _id\n      } = _ref2;\n      axios.delete(`http://192.168.1.37:8080/db/tasks/${_id}`).then(() => setStyle(deleteAnim));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Task\",\n      style: {\n        backgroundColor: backgrounds[data.status],\n        style\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete\",\n        onClick: () => deleteTask(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: onClick,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Title\",\n          children: [\"Title: \", data.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Id\",\n          children: data._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TaskTool\",\n          children: data.toolname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"CreatedAt\",\n          children: data.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this);\n  };\n  _s(Task, \"3ct+BjbeZszrEH70Oh8L4g/J6yk=\");\n  const displayTasks = () => {\n    getCollection(`tasks`).then(tasks => setTasks(tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        data: task,\n        onClick: () => viewTask(task)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 75\n      }, this);\n    })));\n  };\n  useEffect(displayTasks, []);\n  const TaskInfo = _ref3 => {\n    var _data$title;\n    let {\n      data\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Title\",\n        children: (_data$title = data.title) !== null && _data$title !== void 0 ? _data$title : `Task view`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Status\",\n        children: data.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"id\",\n        children: data._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TaskTool\",\n        children: data.toolname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TaskDir\",\n        children: data.dir\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this), data.status === 'done' ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Files/${data.toolname}/${data.title}`,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results avaliable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 97\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this);\n  };\n  const [tasks, setTasks] = useState(null);\n  const [task, viewTask] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskList\",\n      children: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n      data: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n_s2(Tasks, \"d2j+7p2QowVpyTX2JVv3Wya7+P4=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["axios","useEffect","useState","Link","getCollection","backgrounds","deleteAnim","jsxDEV","_jsxDEV","Tasks","_s2","_s","$RefreshSig$","Task","_ref","_backgrounds$data$sta","data","onClick","style","setStyle","backgroundColor","status","deleteTask","_ref2","_id","delete","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","toolname","createdAt","displayTasks","tasks","setTasks","map","task","viewTask","TaskInfo","_ref3","_data$title","dir","to","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/frontend/biomultitool/src/components/Tasks/Tasks.js"],"sourcesContent":["import './Tasks.css'\nimport axios from 'axios'\nimport { useEffect, useState } from \"react\"\nimport { Link } from 'react-router-dom'\nimport { getCollection, backgrounds, deleteAnim } from '../Tools/Utils/Utils'\n\nconst Tasks = () => {\n\nconst Task = ( {data, onClick} ) => {\n\t\n\tconst [style, setStyle] = useState({backgroundColor: backgrounds[data.status]??\"var(--paleRed)\"})\n\n\tconst deleteTask = ({ _id }) => {\n\t\taxios.delete(`http://192.168.1.37:8080/db/tasks/${_id}`).then(() => setStyle( deleteAnim ))\n\t}\n\n\treturn (\n\t\t<div className='Task' style={{ backgroundColor: backgrounds[data.status], style }}>\n\t\t\t<button className='Delete' onClick={() => deleteTask(data)}></button>\n\t\t\t<div onClick={ onClick }>\n\t\t\t<p className='Title'>Title: {data.title}</p>\n\t\t\t<p className='Id'>{data._id}</p>\n\t\t\t<p className='TaskTool'>{data.toolname}</p>\n\t\t\t<p className='CreatedAt'>{data.createdAt}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst displayTasks = () => {\n\tgetCollection(`tasks`).then(tasks => setTasks(tasks.map(task => { return <Task key={ task._id } data={ task } onClick={ () => viewTask(task) }/> })))\n}\n\nuseEffect(displayTasks, [])\n\nconst TaskInfo = ({ data }) => {\n\treturn (\n\t\t<div className='TaskInfo'>\n\t\t\t<p className='Title'>{ data.title??`Task view` }</p>\n\t\t\t<p className='Status'>{ data.status }</p>\n\t\t\t<p className='id'>{ data._id }</p>\n\t\t\t<p className='TaskTool'>{ data.toolname }</p>\n\t\t\t<p className='TaskDir'>{ data.dir }</p>\n\t\t\t{ (data.status === 'done')?<Link to={`/Files/${data.toolname}/${data.title}`}>Results</Link>:<p>No results avaliable</p> }\n\t\t</div>\n\t)\n}\n\nconst [tasks,setTasks] = useState(null)\nconst [task,viewTask] = useState({})\n\n\treturn (\n\t\t<div className='Divider'>\n\t\t<div className='TaskList'>{ tasks }</div>\n\t\t<TaskInfo data={ task }/>\n\t\t</div>\n\t)\n}\n\nexport default Tasks\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}