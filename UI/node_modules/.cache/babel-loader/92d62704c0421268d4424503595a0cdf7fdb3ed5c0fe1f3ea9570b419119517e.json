{"ast":null,"code":"import _objectSpread from\"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/devi/BMI/services/biomultitool/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'../Utils/Utils.css';import{useForm}from'react-hook-form';import{useEffect,useState}from'react';import{get,sendForm,ProgressBar}from'../Utils/Utils';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var BlastForm=function BlastForm(){var Blast=function Blast(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var _useState=useState(),_useState2=_slicedToArray(_useState,2),databases=_useState2[0],setDatabases=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var getBlastDb=function getBlastDb(){get(\"/db/blast-db\").then(function(entries){return setDatabases(entries.map(function(entry){return/*#__PURE__*/_jsxs(\"option\",{value:entry.title,children:[entry.title,\" (\",entry.type,\")\"]},entry._id);}));});};useEffect(getBlastDb,[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"ToolForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"DbTitle\",children:\"Blast\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(function(data){return sendForm(data,'/services/blast',setProgress);}),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\")),{},{type:\"text\",placeholder:\"Title\"})),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({defaultValue:\"blastn\"},register(\"type\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"blastn\",children:\"Nucleotide - Nucleotide\"}),/*#__PURE__*/_jsx(\"option\",{value:\"blastp\",children:\"Protein - Protein\"}),/*#__PURE__*/_jsx(\"option\",{value:\"blastx\",children:\"Nucleotide - Protein\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tblastn\",children:\"Protein - Nucleotide\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tblastx\",children:\"Translated nucleotide\"})]})),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({defaultValue:\"7\"},register(\"outfmt\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"Pairwise\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Query-anchored showing identities\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"Query-anchored no identities\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"Flat query-anchored showing identities\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4\",children:\"Flat query-anchored no identities\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"BLAST XML\"}),/*#__PURE__*/_jsx(\"option\",{value:\"6\",children:\"Tabular\"}),/*#__PURE__*/_jsx(\"option\",{value:\"7\",children:\"Tabular with comments\"}),/*#__PURE__*/_jsx(\"option\",{value:\"8\",children:\"Seqalign (Text ASN.1)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"9\",children:\"Seqalign (Binary ASN.1)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"Comma-separated values\"}),/*#__PURE__*/_jsx(\"option\",{value:\"11\",children:\"BLAST archive (ASN.1)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"12\",children:\"Seqalign (JSON)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"13\",children:\"Multiple-file JSON\"}),/*#__PURE__*/_jsx(\"option\",{value:\"14\",children:\"Multiple-file XML2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"15\",children:\"Single-file JSON\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16\",children:\"Single-file XML2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"17\",children:\"Sequence Alignment/Map\"}),/*#__PURE__*/_jsx(\"option\",{value:\"18\",children:\"Organism Report\"})]})),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"query\")),{},{type:\"text\",placeholder:\"Query\",spellCheck:\"false\"})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"files\")),{},{type:\"file\",multiple:true})),/*#__PURE__*/_jsx(ProgressBar,{progress:progress}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({required:true},register(\"db\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a database\"}),databases]})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"args\")),{},{type:\"text\",placeholder:\"Arguments\"})),/*#__PURE__*/_jsx(\"input\",{disabled:progress<=99&&progress>=1,type:\"submit\"})]})]});};var BlastDb=function BlastDb(){var _useForm2=useForm(),register=_useForm2.register,handleSubmit=_useForm2.handleSubmit;var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),progress=_useState6[0],setProgress=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"ToolForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"DbTitle\",children:\"Blast DB\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(function(data){return sendForm(data,'/services/blast-db',setProgress);}),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\")),{},{type:\"text\",placeholder:\"Title\"})),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({defaultValue:\"nucl\"},register(\"type\")),{},{children:[/*#__PURE__*/_jsx(\"option\",{value:\"nucl\",children:\"Nucleotide\"}),/*#__PURE__*/_jsx(\"option\",{value:\"prot\",children:\"Protein\"})]})),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"files\")),{},{type:\"file\",multiple:true})),/*#__PURE__*/_jsx(ProgressBar,{progress:progress}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"args\")),{},{type:\"text\",placeholder:\"Arguments\"})),/*#__PURE__*/_jsx(\"input\",{disabled:progress<=99&&progress>=1,type:\"submit\"})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:'Form',children:[/*#__PURE__*/_jsx(Blast,{}),/*#__PURE__*/_jsx(BlastDb,{})]});};export default BlastForm;","map":{"version":3,"names":["useForm","useEffect","useState","get","sendForm","ProgressBar","jsxs","_jsxs","jsx","_jsx","BlastForm","Blast","_useForm","register","handleSubmit","_useState","_useState2","_slicedToArray","databases","setDatabases","_useState3","_useState4","progress","setProgress","getBlastDb","then","entries","map","entry","value","title","children","type","_id","className","onSubmit","data","_objectSpread","placeholder","defaultValue","spellCheck","multiple","required","disabled","BlastDb","_useForm2","_useState5","_useState6"],"sources":["/home/devi/BMI/services/biomultitool/backend/frontend/src/components/Blast/Blast.js"],"sourcesContent":["import '../Utils/Utils.css'\nimport { useForm } from 'react-hook-form'\nimport { useEffect, useState } from 'react'\nimport { get, sendForm, ProgressBar } from '../Utils/Utils'\n\nconst BlastForm = () => {\n\nconst Blast = () => {\n\nconst {register, handleSubmit} = useForm()\nconst [databases, setDatabases] = useState()\nconst [progress, setProgress] = useState(0)\n\nconst getBlastDb = () => {\n\t\tget(`/db/blast-db`).then(entries => setDatabases(entries.map( entry => { return <option key={ entry._id } value={ entry.title }>{ entry.title } ({ entry.type })</option> })))\n}\n\nuseEffect(getBlastDb, [])\n\n\treturn (\n\t\t<div className='ToolForm'>\n\t\t\t<div className='DbTitle'>Blast</div>\n\t\t\t<form onSubmit={ handleSubmit(data => sendForm(data,'/services/blast', setProgress)) }>\n\t\t\t\t<input {...register(\"title\") } type=\"text\" placeholder=\"Title\" />\n\t\t\t\t<select defaultValue=\"blastn\" {...register(\"type\") }>\n\t\t\t\t\t<option value=\"blastn\">Nucleotide - Nucleotide</option>\n\t\t\t\t\t<option value=\"blastp\">Protein - Protein</option>\n\t\t\t\t\t<option value=\"blastx\">Nucleotide - Protein</option>\n\t\t\t\t\t<option value=\"tblastn\">Protein - Nucleotide</option>\t\n\t\t\t\t\t<option value=\"tblastx\">Translated nucleotide</option>\n\t\t\t\t</select>\n\t\t\t\t<select defaultValue=\"7\" {...register(\"outfmt\") }>\n\t\t\t\t\t<option value=\"0\">Pairwise</option>\n\t\t\t\t\t<option value=\"1\">Query-anchored showing identities</option>\n\t\t\t\t\t<option value=\"2\">Query-anchored no identities</option>\n\t\t\t\t\t<option value=\"3\">Flat query-anchored showing identities</option>\n\t\t\t\t\t<option value=\"4\">Flat query-anchored no identities</option>\n\t\t\t\t\t<option value=\"5\">BLAST XML</option>\n\t\t\t\t\t<option value=\"6\">Tabular</option>\n\t\t\t\t\t<option value=\"7\">Tabular with comments</option>\n\t\t\t\t\t<option value=\"8\">Seqalign (Text ASN.1)</option>\n\t\t\t\t\t<option value=\"9\">Seqalign (Binary ASN.1)</option>\n\t\t\t\t\t<option value=\"10\">Comma-separated values</option>\n\t\t\t\t\t<option value=\"11\">BLAST archive (ASN.1)</option>\n\t\t\t\t\t<option value=\"12\">Seqalign (JSON)</option>\n\t\t\t\t\t<option value=\"13\">Multiple-file JSON</option>\n\t\t\t\t\t<option value=\"14\">Multiple-file XML2</option>\n\t\t\t\t\t<option value=\"15\">Single-file JSON</option>\n\t\t\t\t\t<option value=\"16\">Single-file XML2</option>\n\t\t\t\t\t<option value=\"17\">Sequence Alignment/Map</option>\n\t\t\t\t\t<option value=\"18\">Organism Report</option>\n\t\t</select>\n\t\t\t\t<textarea {...register(\"query\") } type=\"text\" placeholder=\"Query\" spellCheck=\"false\" />\n\t\t\t\t<input {...register(\"files\") } type=\"file\" multiple/>\n\t\t\t\t<ProgressBar progress={ progress }/>\n\t\t\t\t<select required {...register(\"db\") } >\n\t\t\t\t\t<option value=\"\">Select a database</option>\n\t\t\t\t\t{ databases }\n\t\t\t\t</select>\n\t\t\t\t<input {...register(\"args\")} type=\"text\" placeholder=\"Arguments\" />\n\t\t\t\t<input disabled={ (progress<=99 && progress>=1) } type=\"submit\"/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst BlastDb = () => {\n\t\n\tconst {register, handleSubmit} = useForm()\n\tconst [progress, setProgress] = useState(0)\n\n\treturn (\n\t\t<div className='ToolForm'>\n\t\t\t<div className='DbTitle'>Blast DB</div>\n\t\t\t<form onSubmit={handleSubmit(data => sendForm(data, '/services/blast-db', setProgress))}>\n\t\t\t\t<input {...register(\"title\")} type=\"text\" placeholder=\"Title\" />\n\t\t\t\t<select defaultValue=\"nucl\" {...register(\"type\")} >\n\t\t\t\t\t<option value=\"nucl\">Nucleotide</option>\n\t\t\t\t\t<option value=\"prot\">Protein</option>\n\t\t\t\t</select>\n\t\t\t\t<input {...register(\"files\")} type=\"file\" multiple />\n\t\t\t\t<ProgressBar progress={ progress }/>\n\t\t\t\t<input {...register(\"args\")} type=\"text\" placeholder=\"Arguments\" />\n\t\t\t\t<input disabled={ (progress<=99 && progress>=1) } type=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\n\treturn(\n\t\t<div className={'Form'}>\n\t\t\t<Blast/>\n\t\t\t<BlastDb/>\n\t\t</div>\n\t)\n\n}\nexport default BlastForm\n"],"mappings":"qRAAA,MAAO,oBAAoB,CAC3B,OAASA,OAAO,KAAQ,iBAAiB,CACzC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,GAAG,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,gBAAgB,QAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAE3D,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CAExB,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAA,CAAS,CAEpB,IAAAC,QAAA,CAAiCZ,OAAO,EAAE,CAAnCa,QAAQ,CAAAD,QAAA,CAARC,QAAQ,CAAEC,YAAY,CAAAF,QAAA,CAAZE,YAAY,CAC7B,IAAAC,SAAA,CAAkCb,QAAQ,EAAE,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAAgClB,QAAQ,CAAC,CAAC,CAAC,CAAAmB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAApCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAE5B,GAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvBrB,GAAG,gBAAgB,CAACsB,IAAI,CAAC,SAAAC,OAAO,QAAI,CAAAP,YAAY,CAACO,OAAO,CAACC,GAAG,CAAE,SAAAC,KAAK,CAAI,CAAE,mBAAOrB,KAAA,WAA0BsB,KAAK,CAAGD,KAAK,CAACE,KAAO,CAAAC,QAAA,EAAGH,KAAK,CAACE,KAAK,CAAE,IAAE,CAAEF,KAAK,CAACI,IAAI,CAAE,GAAC,GAAlEJ,KAAK,CAACK,GAAG,CAAkE,CAAC,CAAC,CAAC,CAAC,GAAC,CAChL,CAAC,CAEDhC,SAAS,CAACuB,UAAU,CAAE,EAAE,CAAC,CAExB,mBACCjB,KAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAH,QAAA,eACxBtB,IAAA,QAAKyB,SAAS,CAAC,SAAS,CAAAH,QAAA,CAAC,OAAK,EAAM,cACpCxB,KAAA,SAAM4B,QAAQ,CAAGrB,YAAY,CAAC,SAAAsB,IAAI,QAAI,CAAAhC,QAAQ,CAACgC,IAAI,CAAC,iBAAiB,CAAEb,WAAW,CAAC,GAAG,CAAAQ,QAAA,eACrFtB,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,OAAO,CAAC,MAAGmB,IAAI,CAAC,MAAM,CAACM,WAAW,CAAC,OAAO,GAAG,cACjE/B,KAAA,UAAA8B,aAAA,CAAAA,aAAA,EAAQE,YAAY,CAAC,QAAQ,EAAK1B,QAAQ,CAAC,MAAM,CAAC,MAAAkB,QAAA,eACjDtB,IAAA,WAAQoB,KAAK,CAAC,QAAQ,CAAAE,QAAA,CAAC,yBAAuB,EAAS,cACvDtB,IAAA,WAAQoB,KAAK,CAAC,QAAQ,CAAAE,QAAA,CAAC,mBAAiB,EAAS,cACjDtB,IAAA,WAAQoB,KAAK,CAAC,QAAQ,CAAAE,QAAA,CAAC,sBAAoB,EAAS,cACpDtB,IAAA,WAAQoB,KAAK,CAAC,SAAS,CAAAE,QAAA,CAAC,sBAAoB,EAAS,cACrDtB,IAAA,WAAQoB,KAAK,CAAC,SAAS,CAAAE,QAAA,CAAC,uBAAqB,EAAS,IAC9C,cACTxB,KAAA,UAAA8B,aAAA,CAAAA,aAAA,EAAQE,YAAY,CAAC,GAAG,EAAK1B,QAAQ,CAAC,QAAQ,CAAC,MAAAkB,QAAA,eAC9CtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,UAAQ,EAAS,cACnCtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,mCAAiC,EAAS,cAC5DtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,8BAA4B,EAAS,cACvDtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,wCAAsC,EAAS,cACjEtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,mCAAiC,EAAS,cAC5DtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,WAAS,EAAS,cACpCtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,SAAO,EAAS,cAClCtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,uBAAqB,EAAS,cAChDtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,uBAAqB,EAAS,cAChDtB,IAAA,WAAQoB,KAAK,CAAC,GAAG,CAAAE,QAAA,CAAC,yBAAuB,EAAS,cAClDtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,wBAAsB,EAAS,cAClDtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,uBAAqB,EAAS,cACjDtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,iBAAe,EAAS,cAC3CtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,oBAAkB,EAAS,cAC9CtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,oBAAkB,EAAS,cAC9CtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,kBAAgB,EAAS,cAC5CtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,kBAAgB,EAAS,cAC5CtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,wBAAsB,EAAS,cAClDtB,IAAA,WAAQoB,KAAK,CAAC,IAAI,CAAAE,QAAA,CAAC,iBAAe,EAAS,IACrC,cACPtB,IAAA,YAAA4B,aAAA,CAAAA,aAAA,IAAcxB,QAAQ,CAAC,OAAO,CAAC,MAAGmB,IAAI,CAAC,MAAM,CAACM,WAAW,CAAC,OAAO,CAACE,UAAU,CAAC,OAAO,GAAG,cACvF/B,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,OAAO,CAAC,MAAGmB,IAAI,CAAC,MAAM,CAACS,QAAQ,QAAE,cACrDhC,IAAA,CAACJ,WAAW,EAACiB,QAAQ,CAAGA,QAAU,EAAE,cACpCf,KAAA,UAAA8B,aAAA,CAAAA,aAAA,EAAQK,QAAQ,OAAK7B,QAAQ,CAAC,IAAI,CAAC,MAAAkB,QAAA,eAClCtB,IAAA,WAAQoB,KAAK,CAAC,EAAE,CAAAE,QAAA,CAAC,mBAAiB,EAAS,CACzCb,SAAS,IACH,cACTT,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,MAAM,CAAC,MAAEmB,IAAI,CAAC,MAAM,CAACM,WAAW,CAAC,WAAW,GAAG,cACnE7B,IAAA,UAAOkC,QAAQ,CAAIrB,QAAQ,EAAE,EAAE,EAAIA,QAAQ,EAAE,CAAI,CAACU,IAAI,CAAC,QAAQ,EAAE,GAC3D,GACF,CAER,CAAC,CAED,GAAM,CAAAY,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CAErB,IAAAC,SAAA,CAAiC7C,OAAO,EAAE,CAAnCa,QAAQ,CAAAgC,SAAA,CAARhC,QAAQ,CAAEC,YAAY,CAAA+B,SAAA,CAAZ/B,YAAY,CAC7B,IAAAgC,UAAA,CAAgC5C,QAAQ,CAAC,CAAC,CAAC,CAAA6C,UAAA,CAAA9B,cAAA,CAAA6B,UAAA,IAApCxB,QAAQ,CAAAyB,UAAA,IAAExB,WAAW,CAAAwB,UAAA,IAE5B,mBACCxC,KAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAH,QAAA,eACxBtB,IAAA,QAAKyB,SAAS,CAAC,SAAS,CAAAH,QAAA,CAAC,UAAQ,EAAM,cACvCxB,KAAA,SAAM4B,QAAQ,CAAErB,YAAY,CAAC,SAAAsB,IAAI,QAAI,CAAAhC,QAAQ,CAACgC,IAAI,CAAE,oBAAoB,CAAEb,WAAW,CAAC,GAAE,CAAAQ,QAAA,eACvFtB,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,OAAO,CAAC,MAAEmB,IAAI,CAAC,MAAM,CAACM,WAAW,CAAC,OAAO,GAAG,cAChE/B,KAAA,UAAA8B,aAAA,CAAAA,aAAA,EAAQE,YAAY,CAAC,MAAM,EAAK1B,QAAQ,CAAC,MAAM,CAAC,MAAAkB,QAAA,eAC/CtB,IAAA,WAAQoB,KAAK,CAAC,MAAM,CAAAE,QAAA,CAAC,YAAU,EAAS,cACxCtB,IAAA,WAAQoB,KAAK,CAAC,MAAM,CAAAE,QAAA,CAAC,SAAO,EAAS,IAC7B,cACTtB,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,OAAO,CAAC,MAAEmB,IAAI,CAAC,MAAM,CAACS,QAAQ,QAAG,cACrDhC,IAAA,CAACJ,WAAW,EAACiB,QAAQ,CAAGA,QAAU,EAAE,cACpCb,IAAA,SAAA4B,aAAA,CAAAA,aAAA,IAAWxB,QAAQ,CAAC,MAAM,CAAC,MAAEmB,IAAI,CAAC,MAAM,CAACM,WAAW,CAAC,WAAW,GAAG,cACnE7B,IAAA,UAAOkC,QAAQ,CAAIrB,QAAQ,EAAE,EAAE,EAAIA,QAAQ,EAAE,CAAI,CAACU,IAAI,CAAC,QAAQ,EAAG,GAC5D,GACF,CAER,CAAC,CAEA,mBACCzB,KAAA,QAAK2B,SAAS,CAAE,MAAO,CAAAH,QAAA,eACtBtB,IAAA,CAACE,KAAK,IAAE,cACRF,IAAA,CAACmC,OAAO,IAAE,GACL,CAGR,CAAC,CACD,cAAe,CAAAlC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}