{"ast":null,"code":"var _jsxFileName = \"/home/devi/BMI/services/biomultitool/backend/frontend/src/components/Databases/Databases.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { get, dbBackgrounds, del, deleteAnim } from '../Utils/Utils';\nimport './Databases.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Databases = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [blastDb, setBlastDb] = useState(null);\n  const [skaniSketch, setSkani] = useState(null);\n  const getMany = (collection, hook) => {\n    get(`/db/${collection}`).then(entries => {\n      hook(entries.map(entry => {\n        return /*#__PURE__*/_jsxDEV(DbEntry, {\n          data: entry,\n          collection: collection\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 80\n        }, this);\n      }));\n    });\n  };\n  const getDbs = () => {\n    getMany(`blast-db`, setBlastDb);\n    getMany(`skani-sketch`, setSkani);\n  };\n  useEffect(getDbs, []);\n  const DbEntry = _ref => {\n    _s();\n    var _dbBackgrounds$data$t;\n    let {\n      data,\n      collection\n    } = _ref;\n    const [style, setStyle] = useState({});\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Task\",\n      style: {\n        background: (_dbBackgrounds$data$t = dbBackgrounds[data.type]) !== null && _dbBackgrounds$data$t !== void 0 ? _dbBackgrounds$data$t : `var(--paleOrange)`,\n        ...style\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete\",\n        onClick: () => del(`/db/${collection}/${data._id}`, () => setStyle(deleteAnim))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Title\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Type\",\n        children: data.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Id\",\n        children: data._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this);\n  };\n  _s(DbEntry, \"KenMAwU6PtUB6f0mae8b+lYL968=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DatabaseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Blast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EntryList\",\n        children: blastDb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DbWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DbTitle\",\n        children: \"Skani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EntryList\",\n        children: skaniSketch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 2\n  }, this);\n};\n_s2(Databases, \"z/lvEidTsImVgqt2RPBbY4MD8xI=\");\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["useEffect","useState","get","dbBackgrounds","del","deleteAnim","jsxDEV","_jsxDEV","Databases","_s2","_s","$RefreshSig$","blastDb","setBlastDb","skaniSketch","setSkani","getMany","collection","hook","then","entries","map","entry","DbEntry","data","_id","fileName","_jsxFileName","lineNumber","columnNumber","getDbs","_ref","_dbBackgrounds$data$t","style","setStyle","className","background","type","children","onClick","title","_c","$RefreshReg$"],"sources":["/home/devi/BMI/services/biomultitool/backend/frontend/src/components/Databases/Databases.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { get, dbBackgrounds, del, deleteAnim } from '../Utils/Utils'\nimport './Databases.css'\n\nconst Databases = () => {\n\nconst [blastDb, setBlastDb] = useState(null)\nconst [skaniSketch, setSkani] = useState(null)\n\nconst getMany = (collection, hook) => {\n\tget(`/db/${collection}`).then(entries => { hook(entries.map(entry => { return <DbEntry key={ entry._id } data={ entry } collection={ collection }/> })) })\n}\n\nconst getDbs = () => {\n\tgetMany(`blast-db`, setBlastDb)\n\tgetMany(`skani-sketch`, setSkani)\n}\n\nuseEffect(getDbs,[])\n\nconst DbEntry = ({ data, collection }) => {\n\tconst [style, setStyle] = useState({ })\n\treturn (\n\t\t<div className='Task' style={{ background: dbBackgrounds[data.type]??`var(--paleOrange)`, ...style }}>\n\t\t\t<button className='Delete' onClick={() => del(`/db/${collection}/${data._id}`, () => setStyle(deleteAnim)) }></button>\n\t\t\t<p className='Title'>{ data.title }</p>\n\t\t\t<p className='Type'>{ data.type }</p>\n\t\t\t<p className='Id'>{ data._id }</p>\n\t\t</div>\n\t)\n}\n\nreturn (\n\t<div className='DatabaseList'>\n\t\t<div className='DbWrapper'><div className='DbTitle'>Blast</div><div className='EntryList'>{ blastDb }</div></div>\n\t\t<div className='DbWrapper'><div className='DbTitle'>Skani</div><div className='EntryList'>{ skaniSketch }</div></div>\t\n\t</div>\n\t)\n}\n\nexport default Databases\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}